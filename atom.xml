<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>WilliamJi&#39;s Blog</title>
  <icon>https://www.gravatar.com/avatar/0f53a7999324c617d81e0ca9427f77e7</icon>
  <subtitle>Coder can change world!</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-11-08T07:37:39.712Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>William Ji</name>
    <email>jxjmdx2009@163.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title> 荒野大镖客视频</title>
    <link href="http://yoursite.com/2018/11/08/%E8%8D%92%E9%87%8E%E5%A4%A7%E9%95%96%E5%AE%A2%E8%A7%86%E9%A2%91/"/>
    <id>http://yoursite.com/2018/11/08/荒野大镖客视频/</id>
    <published>2018-11-08T07:28:15.000Z</published>
    <updated>2018-11-08T07:37:39.712Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><iframe frameborder="0" src="https://v.qq.com/txp/iframe/player.html?vid=p0758s8f29d" width="600" height="500" allowfullscreen="true"></iframe>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="游戏视频" scheme="http://yoursite.com/categories/%E6%B8%B8%E6%88%8F%E8%A7%86%E9%A2%91/"/>
    
    
      <category term="Game" scheme="http://yoursite.com/tags/Game/"/>
    
  </entry>
  
  <entry>
    <title>Unity 2D Roguelike(二)</title>
    <link href="http://yoursite.com/2018/10/28/Unity2D%20Roguelike(%E4%BA%8C)/"/>
    <id>http://yoursite.com/2018/10/28/Unity2D Roguelike(二)/</id>
    <published>2018-10-28T02:59:49.000Z</published>
    <updated>2018-11-14T06:50:29.894Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h2 id="基本地图的完善"><a href="#基本地图的完善" class="headerlink" title="基本地图的完善"></a>基本地图的完善</h2><h3 id="创建敌人"><a href="#创建敌人" class="headerlink" title="创建敌人"></a>创建敌人</h3><h3 id="创建玩家"><a href="#创建玩家" class="headerlink" title="创建玩家"></a>创建玩家</h3><h4 id="控制游戏玩家的移动"><a href="#控制游戏玩家的移动" class="headerlink" title="控制游戏玩家的移动"></a>控制游戏玩家的移动</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">// 获取W的按键</span><br><span class="line">Input.GetKey (KeyCode.W);</span><br></pre></td></tr></table></figure><h3 id="创建UI"><a href="#创建UI" class="headerlink" title="创建UI"></a>创建UI</h3><h2 id="场景切换"><a href="#场景切换" class="headerlink" title="场景切换"></a>场景切换</h2><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><h3 id="添加背景音乐"><a href="#添加背景音乐" class="headerlink" title="添加背景音乐"></a>添加背景音乐</h3><p>在GameManager 上添加AudioSource组件,添加音乐</p><h3 id="手机控制器"><a href="#手机控制器" class="headerlink" title="手机控制器"></a>手机控制器</h3>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="Unity" scheme="http://yoursite.com/categories/Unity/"/>
    
    
      <category term="Unity" scheme="http://yoursite.com/tags/Unity/"/>
    
  </entry>
  
  <entry>
    <title>Unity 2D Roguelike(一)</title>
    <link href="http://yoursite.com/2018/10/28/Unity%202D%20Roguelike(%E4%B8%80)/"/>
    <id>http://yoursite.com/2018/10/28/Unity 2D Roguelike(一)/</id>
    <published>2018-10-28T01:57:48.000Z</published>
    <updated>2018-11-14T08:49:51.938Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h2 id="2D-游戏制作"><a href="#2D-游戏制作" class="headerlink" title="2D 游戏制作"></a>2D 游戏制作</h2><p>学习Unity的官方教程</p><p>2D Roguelike tutorial 开发</p><h2 id="游戏介绍"><a href="#游戏介绍" class="headerlink" title="游戏介绍"></a>游戏介绍</h2><p>这是官方提供的游戏,名字叫拾荒漫游者,我们从这个游戏大致可以了解下Unity的开发流程</p><h2 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h2><p>游戏名称为: 拾荒者</p><p>大致介绍: 游戏有外围栏,障碍,敌人,食物,玩家和出口几个元素组成, 障碍和食物都是随机生成,玩家在左下角,出口在右上角</p><p>成功条件: 当玩家到达出口时,进入下一关卡</p><p>失败条件: 当玩家的食物为0的时候失败</p><p>具体逻辑: 玩家进行2步,敌人进行一步,障碍可以被攻击,初始时玩家100食物,每行进一步,消耗1点食物,被怪物攻击,消耗10点食物,吃食物可以增加食物数量,关卡的敌人数量和关卡数成正比,食物最大值和关卡数成正比</p><h2 id="启动和资源"><a href="#启动和资源" class="headerlink" title="启动和资源"></a>启动和资源</h2><h3 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h3><p>创建项目取名为Roguelike,选择2D游戏,存储到指定位置</p><h3 id="获取资源"><a href="#获取资源" class="headerlink" title="获取资源"></a>获取资源</h3><p>链接:<code>https://pan.baidu.com/s/1LUiJBbRgL9FSy-J8vd590g</code><br>密码:iz3r</p><p>官方资源 到Assets 商店中搜索<code>2D Roguelike</code>,或者到 <code>首页 &gt; 必备工具 &gt; 视频教程项目资源</code> 中找到 <code>2D Roguelike</code></p><p>然后到<code>~/Library/Unity/Asset Store</code> 中查看资源,后缀是<code>.unitypackage</code></p><h3 id="导入资源"><a href="#导入资源" class="headerlink" title="导入资源"></a>导入资源</h3><p><img src="/2018/10/28/Unity 2D Roguelike(一)/import_package.png" alt=""></p><p>选择下载好的资源包,导入</p><h3 id="查看资源"><a href="#查看资源" class="headerlink" title="查看资源"></a>查看资源</h3><p><img src="/2018/10/28/Unity 2D Roguelike(一)/Assets.png" alt=""></p><h3 id="选择布局方式"><a href="#选择布局方式" class="headerlink" title="选择布局方式"></a>选择布局方式</h3><p><img src="/2018/10/28/Unity 2D Roguelike(一)/layout_set.png" alt=""></p><h3 id="文件创建"><a href="#文件创建" class="headerlink" title="文件创建"></a>文件创建</h3><p>在Assets 文件下创建下列文件夹,用于归类: </p><ul><li>Scenes  存储场景,场景就是同一个背景的游戏部分 </li><li>Scripts 游戏脚本存储</li><li>Prefabs  预制体,可以批量产生同一类型的游戏物体</li><li>Animations 存放游戏动画和动画控制器</li><li>还有资源类文件,比如Audios,Vedios,Fonts等</li></ul><h2 id="资源准备阶段"><a href="#资源准备阶段" class="headerlink" title="资源准备阶段"></a>资源准备阶段</h2><p>开始阶段,我们<code>cmd+s</code> 保存场景,就是将<code>Hierachy</code>里的游戏物体保存下来,保存到<code>_main</code>,放置到Scenes.</p><h3 id="首先查看资源"><a href="#首先查看资源" class="headerlink" title="首先查看资源"></a>首先查看资源</h3><p>在Assets/Sprites,选择<code>Scavengers_SpriteSheet</code>, 在右侧 <code>inspector</code> 中 可以点击Sprite Editor查看精灵</p><h3 id="游戏基本的画面-需要搭建如下"><a href="#游戏基本的画面-需要搭建如下" class="headerlink" title="游戏基本的画面,需要搭建如下"></a>游戏基本的画面,需要搭建如下</h3><p><img src="/2018/10/28/Unity 2D Roguelike(一)/MainPlay.png" alt=""></p><h3 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h3><p>游戏画面是一个8 x 8 的格子,周边是一周墙,内部的4 x 4才会随机生成怪物和围墙以及食物,玩家出现在左下角,出口在右上角</p><h3 id="创建玩家和敌人的游戏物体"><a href="#创建玩家和敌人的游戏物体" class="headerlink" title="创建玩家和敌人的游戏物体"></a>创建玩家和敌人的游戏物体</h3><p>在 <code>Project -&gt;  Assets -&gt; Scavengers_SpriteSheet</code> ,点开类似播放的按钮</p><p>按住Shift, 从 第一张选择到第六张, 拖动到 <code>Hierarchy</code> 下</p><p><img src="/2018/10/28/Unity 2D Roguelike(一)/CreatePlay.png" alt=""></p><p>出现以下界面,选择动画的名称</p><p><img src="/2018/10/28/Unity 2D Roguelike(一)/CreatePlay3.png" alt=""></p><p><img src="/2018/10/28/Unity 2D Roguelike(一)/CreatePlay4.png" alt=""></p><p>游戏物体取名为<code>Player</code>,动画取名为<code>PlayerIdle</code>(Idle动画-&gt; 等待时的动画), 动画控制器取名为<code>PlayerController</code></p><p>按一下 <code>w</code> 快捷键,或者选取右上角的拖动标识,拖动角色</p><p><img src="/2018/10/28/Unity 2D Roguelike(一)/tiaozheng.png" alt=""></p><p>然后点击Game 查看效果</p><p>在Animation文件下,分别创建Aimation和AnimationController文件夹,分别放置 Player动画<code>PlayerIdle</code>和控制器<code>PlayerController</code></p><h4 id="同样创建2个敌人的游戏物体"><a href="#同样创建2个敌人的游戏物体" class="headerlink" title="同样创建2个敌人的游戏物体"></a>同样创建2个敌人的游戏物体</h4><p>按照以上方法练习一遍,选择资源文件第6-11张 第一个敌人  12-17张第二个敌人</p><h4 id="修改动画"><a href="#修改动画" class="headerlink" title="修改动画"></a>修改动画</h4><p>点击运行,发现动画太快了,我们点击动画,选择橘黄色的部分,可以设置speed,设置为 0.5,重新运行,会发现慢了很多,名字修改为PlayerIdle</p><p><img src="/2018/10/28/Unity 2D Roguelike(一)/AnimaionSpeed.png" alt=""></p><h4 id="创建玩家攻击和被攻击动画"><a href="#创建玩家攻击和被攻击动画" class="headerlink" title="创建玩家攻击和被攻击动画"></a>创建玩家攻击和被攻击动画</h4><p>复选攻击动画(资源文件40-41张),拖动到Player的游戏物体身上</p><p>复选被攻击动画(资源文件46-47张),拖动到Player的游戏物体身上</p><p>怪物的同理,将动画的拖动到对应的文件中</p><p><img src="/2018/10/28/Unity 2D Roguelike(一)/AnimaitonVC.png" alt=""></p><h4 id="动画之间的切换"><a href="#动画之间的切换" class="headerlink" title="动画之间的切换"></a>动画之间的切换</h4><p>步骤如图,创建从基本状态到攻击状态的动画转换<br><img src="/2018/10/28/Unity 2D Roguelike(一)/TransitionAnimator.png" alt=""></p><p>同样的方法创建从攻击状态返回基本状态的转换</p><h4 id="动画转换的设置"><a href="#动画转换的设置" class="headerlink" title="动画转换的设置"></a>动画转换的设置</h4><p>点击之前生成的动画转换箭头,右侧Inspector查看</p><p><img src="/2018/10/28/Unity 2D Roguelike(一)/TransitionAnimator.png" alt=""></p><ul><li>Has Exit Time: 是否播放完动画自动切换为之前的动画</li><li>Setting/Exit Time: 播放完动画的时间,上面的打钩才会有这个属性</li><li>Fixed Duration: 切换持续时间是和状态的时长独立的</li><li>Transiton Duration: 动画切换时长</li><li>Interruption Soutce: 可以被什么动画中断</li><li>Conditions: 动画切换的条件,一旦成立就会发生动画切换</li></ul><h4 id="创建动画切换的条件"><a href="#创建动画切换的条件" class="headerlink" title="创建动画切换的条件"></a>创建动画切换的条件</h4><p><img src="/2018/10/28/Unity 2D Roguelike(一)/TriggerCreate.png" alt=""></p><p>创建一个Trigger 触发器,取名为Attack,以后代码中调用Attack即可调用 从普通状态到攻击状态的动画</p><p>创建 从攻击状态返回普通状态的动画,我们让攻击动画播放完就回到普通状态.</p><p><img src="/2018/10/28/Unity 2D Roguelike(一)/AnimatorBack.png" alt=""></p><p>敌人和玩家也都创建好动画转换,完成后玩家和敌人的游戏资源就处理好了!</p><h4 id="创建预制体"><a href="#创建预制体" class="headerlink" title="创建预制体"></a>创建预制体</h4><blockquote><p>预制体相当于抽象父类,就是 预先制作好的游戏物体, 可以用它来copy 出同样的物体</p></blockquote><p>将<code>Hierachy</code> 中的Player,Enemy1,Enemy2 拖动到Project 文件的Prefabs 文件下,生成预制体,顺便将<code>Hierachy</code> 中的变为蓝色字体的游戏物体删除,因为我们通过代码创建游戏物体.</p><p><img src="/2018/10/28/Unity 2D Roguelike(一)/Prefabs.png" alt=""></p><h3 id="创建地板-食物-以及障碍物的预制体"><a href="#创建地板-食物-以及障碍物的预制体" class="headerlink" title="创建地板,食物,以及障碍物的预制体"></a>创建地板,食物,以及障碍物的预制体</h3><h4 id="首先创建8种地板的预制体"><a href="#首先创建8种地板的预制体" class="headerlink" title="首先创建8种地板的预制体"></a>首先创建8种地板的预制体</h4><p>选择图片32-39,分别创建Floor1- Floor8的预制体</p><h4 id="创建食物苏打汽水-出口的预制体"><a href="#创建食物苏打汽水-出口的预制体" class="headerlink" title="创建食物苏打汽水,出口的预制体"></a>创建食物苏打汽水,出口的预制体</h4><p>选择图片资源第18张创建苏打汽水,19张创建食物,20张创建出口</p><h4 id="创建内外围墙的预制体"><a href="#创建内外围墙的预制体" class="headerlink" title="创建内外围墙的预制体"></a>创建内外围墙的预制体</h4><p>创建3个外墙的预制体,图片资源 25,26,28</p><p>创建8个内墙的预制体, 图片资源 21-24,27,29-31</p><blockquote><p>资源全部准备完毕</p></blockquote><h2 id="逻辑处理阶段"><a href="#逻辑处理阶段" class="headerlink" title="逻辑处理阶段"></a>逻辑处理阶段</h2><h3 id="创建游戏基本控制器和声音基本控制器"><a href="#创建游戏基本控制器和声音基本控制器" class="headerlink" title="创建游戏基本控制器和声音基本控制器"></a>创建游戏基本控制器和声音基本控制器</h3><p>我们点击Main Camera,在右侧的Inspector边栏中 找到Add Component,添加脚本: 查找<code>New Script</code>, 创建一个名称为<code>MyLoader</code>的脚本,这个脚本我们主要是加载游戏控制器和声音控制器</p><p>在<code>Hierarchy</code>中创建2个空的游戏物体, <code>Create Empty</code>,取名为<code>MyGameManager</code>和<code>MySoundManager</code>,将他们做成预制体,并从<code>Hierachy</code> 中删除掉这两个游戏物体</p><p>给 <code>MyGameManager</code> 添加2个脚本, 一个名为<code>MapManager</code>,一个名为<code>GameManager</code></p><p>给 <code>MySoundManager</code> 添加1个脚本,取名为<code>SoundManager</code></p><p>首先将所有的<code>.cs</code>文件统一放置到Script 文件夹中</p><p>编辑<code>MyLoader.cs</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">using System.Collections;</span><br><span class="line">using System.Collections.Generic;</span><br><span class="line">using UnityEngine;</span><br><span class="line"></span><br><span class="line">// 给class 添加命名空间,防止重名,相同命名空间可以直接引用</span><br><span class="line">namespace MyCompleted &#123;</span><br><span class="line"></span><br><span class="line">public class MyLoader : MonoBehaviour &#123;</span><br><span class="line"></span><br><span class="line">// 游戏管理器,public 属性会在Unity 中展示</span><br><span class="line">public GameObject gamesManager;</span><br><span class="line"></span><br><span class="line">// 声音管理器</span><br><span class="line">public GameObject soundsManager;</span><br><span class="line"></span><br><span class="line">// awake 在所有的start之前调用,一般我们在Awake中初始化数据,某些特殊的情况可以放到 Start()中</span><br><span class="line">// 这个脚本加载的游戏物体一旦加载就会调用Awake,且一般只调用一次</span><br><span class="line">void Awake () &#123;</span><br><span class="line">if (GameManager.instance == null) &#123;</span><br><span class="line">// 通过预制体实例化</span><br><span class="line">GameObject.Instantiate (gamesManager);</span><br><span class="line">&#125;</span><br><span class="line">if (SoundManager.instance == null) &#123;</span><br><span class="line">// 实例化方法</span><br><span class="line">GameObject.Instantiate (soundsManager);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在Unity 查看展示的 public 信息</p><p><img src="/2018/10/28/Unity 2D Roguelike(一)/LoaderCS.png" alt=""></p><p>将创建的<code>MyGameManager</code>和<code>MySoundManager</code> 两个预制体拖拽到属性后面的框中</p><p>然后给<code>MyGameManager</code>预制体的<code>GameManager.cs</code>和<code>MySoundManager</code>的<code>SoundManager.cs</code>添加单例方法instance,要不然<code>MyLoader.cs</code>报错</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">namespace MyCompleted &#123;</span><br><span class="line"></span><br><span class="line">public class GameManager : MonoBehaviour &#123;</span><br><span class="line">// 单例方法</span><br><span class="line">public static GameManager instance = null;</span><br><span class="line">// 关卡数</span><br><span class="line">private int level = 1;</span><br><span class="line"></span><br><span class="line">// 这里根据 通过代码来创建地图</span><br><span class="line">private MapManager mapSript;</span><br><span class="line"></span><br><span class="line">// 初始化数据,单例方法</span><br><span class="line">void Awake () &#123;</span><br><span class="line"></span><br><span class="line">if (instance == null) &#123;</span><br><span class="line">instance = this;</span><br><span class="line">&#125;else if (instance != this) &#123;</span><br><span class="line">Destroy (this.gameObject);</span><br><span class="line">&#125;</span><br><span class="line">// 游戏物体不销毁(场景切换不销毁,一般场景切换游戏物体会销毁)</span><br><span class="line">DontDestroyOnLoad (this.gameObject);</span><br><span class="line">// 获取地图</span><br><span class="line">this.mapSript = this.GetComponent&lt;MapManager&gt; ();</span><br><span class="line"></span><br><span class="line">// 初始化游戏数据</span><br><span class="line">this.initGame ();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 初始化游戏数据</span><br><span class="line">void initGame () &#123;</span><br><span class="line">// 初始化地图</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">namespace MyCompleted &#123;</span><br><span class="line"></span><br><span class="line">public class SoundManager : MonoBehaviour &#123;</span><br><span class="line">// 单例方法</span><br><span class="line">public static SoundManager instance = null;</span><br><span class="line"></span><br><span class="line">// 初始化数据,单例方法</span><br><span class="line">void Awake () &#123;</span><br><span class="line"></span><br><span class="line">if (instance == null) &#123;</span><br><span class="line">instance = this;</span><br><span class="line">&#125;else if (instance != this) &#123;</span><br><span class="line">Destroy (this.gameObject);</span><br><span class="line">&#125;</span><br><span class="line">// 游戏物体不销毁(场景切换不销毁,一般场景切换游戏物体会销毁)</span><br><span class="line">DontDestroyOnLoad (this.gameObject);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>一旦运行,<code>Hierachy</code> 中就会创建2个游戏物体,名称分别为<code>MyGameManager</code>和<code>MySoundManager</code></p><p><img src="/2018/10/28/Unity 2D Roguelike(一)/createPrefabsName.png" alt=""></p><h3 id="创建地图"><a href="#创建地图" class="headerlink" title="创建地图"></a>创建地图</h3><p>编辑<code>MapManager.cs</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">// 初始化</span><br><span class="line">public void setupScene(int level) &#123;</span><br><span class="line">// 等级初始化</span><br><span class="line">this.level = level;</span><br><span class="line"></span><br><span class="line">// 根据 level 初始化数据</span><br><span class="line">this.init ();</span><br><span class="line"></span><br><span class="line">// 创建地图</span><br><span class="line">this.createMap ();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 初始化数据</span><br><span class="line">void init () &#123;</span><br><span class="line">// 创建外部包裹层</span><br><span class="line">outwallsHolder = new GameObject (&quot;WallsHolder&quot;).transform;</span><br><span class="line">floorsHolder = new GameObject (&quot;FloorsHolder&quot;).transform;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 创建地图</span><br><span class="line">void createMap () &#123;</span><br><span class="line">// 创建外墙和地板</span><br><span class="line"></span><br><span class="line">// 创建内墙,食物</span><br><span class="line"></span><br><span class="line">// 创建出口</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>修改<code>GameManager</code>文件中的<code>initGame</code>方法</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">// 初始化游戏数据</span><br><span class="line">void initGame () &#123;</span><br><span class="line">// 初始化地图</span><br><span class="line">this.mapSript.setupScene (level);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="创建外墙和地板"><a href="#创建外墙和地板" class="headerlink" title="创建外墙和地板"></a>创建外墙和地板</h4><p>下面无论是外墙,地板和内墙,都是随机取图片组成地图</p><p>编译<code>MapManager.cs</code></p><ul><li>添加属性</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">//外墙的预制体数组</span><br><span class="line">public GameObject[] outwalls;</span><br><span class="line">// 地板的预制体数组</span><br><span class="line">public GameObject[] floors;</span><br><span class="line"></span><br><span class="line">// 设置 地图的长宽</span><br><span class="line">public int cols = 8;</span><br><span class="line">public int rows = 8;</span><br></pre></td></tr></table></figure><ul><li>创建工具方法,从数组中随机获取元素</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">// 随机获取数组里面的值</span><br><span class="line">T getRandom&lt;T&gt;(T[] obj) &#123;</span><br><span class="line">return obj[Random.Range (0, obj.Length)];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>创建新的方法</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">// 创建外墙和地板</span><br><span class="line">void createWallsAndFloors () &#123;</span><br><span class="line">for (int y = 0; y &lt; rows; y ++) &#123;</span><br><span class="line">for (int x = 0; x &lt; cols; x++) &#123;</span><br><span class="line">// 创建三维坐标点,z 默认是0</span><br><span class="line">Vector3 vec = new Vector3 (x, y);</span><br><span class="line">if (x == 0 || x == cols - 1 || y == 0 || y == rows - 1) &#123;</span><br><span class="line">// 先创建最外层的 outwalls</span><br><span class="line">// 只有 x = 0,或者 y = 0 ,或者 x = cols - 1,或者 rows -1</span><br><span class="line">GameObject obj = GameObject.Instantiate (getRandom (this.outwalls), vec, Quaternion.identity);</span><br><span class="line">&#125; else &#123;</span><br><span class="line">// 内部区域首先创建地板</span><br><span class="line">GameObject obj = GameObject.Instantiate (getRandom(this.floors),vec,Quaternion.identity);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>修改<code>MapManager.cs</code>中的<code>createMap</code>方法</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">// 创建地图</span><br><span class="line">void createMap () &#123;</span><br><span class="line">// 创建外墙和地板</span><br><span class="line">createWallsAndFloors();</span><br><span class="line">// 创建内墙,食物</span><br><span class="line"></span><br><span class="line">// 创建出口</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行查看效果,会看到地图偏了<br><img src="/2018/10/28/Unity 2D Roguelike(一)/createOutWall.png" alt=""></p><h4 id="摄像头设置"><a href="#摄像头设置" class="headerlink" title="摄像头设置"></a>摄像头设置</h4><p>设置摄像头的绝对坐标为(0,0),所以摄像头要有一定的便宜才能居中,中心点的位置如图</p><p><img src="/2018/10/28/Unity 2D Roguelike(一)/CameraCenter.png" alt=""></p><p>修改Transform 的Position 的坐标为(3.5,3.5,-1), z轴必须是负值才能看得见</p><p>Size 修改为 4</p><p>重新运行,查看效果</p><h4 id="游戏物体归类"><a href="#游戏物体归类" class="headerlink" title="游戏物体归类"></a>游戏物体归类</h4><p>我们查看<code>Hierachy</code>中会发现很多游戏物体,杂乱无章,我们想像文件夹一样有层级</p><p>游戏物体可以相互包裹,父物体可以包含多个子物体,多个子物体相当于一个整体<br>(游戏物体的包裹其实是空间上的包裹,所以我们使用的 transform )</p><p>修改<code>MapManager.cs</code>,新增属性</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">// 1. 定义父类的包裹属性</span><br><span class="line">// outwalls 的游戏物体</span><br><span class="line">private Transform outwallsHolder;</span><br><span class="line"></span><br><span class="line">// 地板的游戏物体</span><br><span class="line">private Transform floorsHolder;</span><br><span class="line"></span><br><span class="line">// 2. 初始化父类的包裹属性</span><br><span class="line">void init () &#123;</span><br><span class="line">outwallsHolder = new GameObject (&quot;OutwallsHolder&quot;).transform;</span><br><span class="line">floorsHolder = new GameObject (&quot;FloorsHolder&quot;).transform;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 3. 设置</span><br><span class="line">GameObject obj = GameObject.Instantiate (getRandom (this.outwalls), vec, Quaternion.identity);</span><br><span class="line">obj.transform.SetParent (outwallsHolder);</span><br><span class="line"></span><br><span class="line">GameObject obj = GameObject.Instantiate (getRandom(this.floors),vec,Quaternion.identity);</span><br><span class="line">obj.transform.SetParent (floorsHolder);</span><br></pre></td></tr></table></figure><p>重新运行查看,会发现现在有了层级</p><h4 id="创建内墙和食物"><a href="#创建内墙和食物" class="headerlink" title="创建内墙和食物"></a>创建内墙和食物</h4><p>内墙和食物的数量随机的,但是数量有一个取值范围</p><p>他们的位置也是随机的</p><ul><li>数量随机,创建一个工具类来记录取值范围<br>Unity 的<code>Inspector</code>只支持Object以及子类以及基本数据类型的展示,<br>如果自定义的 class 类型需要支持<code>Inspector</code>展示,需要加上<code>[System.Serializable]</code></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">// 为了方便在 inspector 中展示类,这个是 count 类,展示最大值和最小值</span><br><span class="line">[System.Serializable]</span><br><span class="line">public class Count&#123;</span><br><span class="line">public int minimum; //Minimum value for our Count class.</span><br><span class="line">public int maximum; //Maximum value for our Count class.</span><br><span class="line"></span><br><span class="line">//Assignment constructor.</span><br><span class="line">public Count (int min, int max)&#123;</span><br><span class="line">minimum = min;</span><br><span class="line">maximum = max;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 获取到随机数</span><br><span class="line">public int randomNum() &#123;</span><br><span class="line">return Random.Range (minimum, maximum+1);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>位置随机,首先获取到所有可用地块的数组</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">// 1. 定义一个 list</span><br><span class="line">private List&lt;Vector3&gt; positionList = new List&lt;Vector3&gt; ();</span><br><span class="line"></span><br><span class="line">// 2. 给数组赋值</span><br><span class="line">else &#123;</span><br><span class="line">// 内部区域首先创建地板</span><br><span class="line">GameObject obj = GameObject.Instantiate (getRandom(this.floors),vec,Quaternion.identity);</span><br><span class="line">obj.transform.SetParent (floorsHolder);</span><br><span class="line"></span><br><span class="line">// 这个位置赋值可用地块的数组</span><br><span class="line">if (!(x == 1 || x == cols - 2 || y == 1 || y == rows - 2)) &#123;</span><br><span class="line">// 初始化可用地块</span><br><span class="line">positionList.Add (vec);</span><br><span class="line">&#125; </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 3. 获取随机位置,然后移除掉,意味着一旦放了东西就不能放其他东西</span><br><span class="line">Vector3 randomPos() &#123;</span><br><span class="line">int randomNum = Random.Range (0,positionList.Count);</span><br><span class="line">Vector3 vec = positionList[randomNum];</span><br><span class="line">positionList.Remove (vec);</span><br><span class="line">return vec;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>创建内墙和食物</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">// 创建内墙和食物</span><br><span class="line">void createInner () &#123;</span><br><span class="line">// 食物和内墙都是随机生成</span><br><span class="line">// 食物</span><br><span class="line">for(int num = 0; num &lt; foodCount.randomNum (); num ++) &#123;</span><br><span class="line">GameObject obj = GameObject.Instantiate (getRandom (this.foods), this.randomPos(), Quaternion.identity);</span><br><span class="line">obj.transform.SetParent (foodsHolder);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 内墙</span><br><span class="line">for (int num = 0; num &lt; wallCount.randomNum(); num ++) &#123;</span><br><span class="line">GameObject obj = GameObject.Instantiate (getRandom (this.walls), this.randomPos (), Quaternion.identity);</span><br><span class="line">obj.transform.SetParent (wallsHoder);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="创建出口"><a href="#创建出口" class="headerlink" title="创建出口"></a>创建出口</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Vector3 randomPos() &#123;</span><br><span class="line">int randomNum = Random.Range (0,positionList.Count);</span><br><span class="line">Vector3 vec = positionList[randomNum];</span><br><span class="line">positionList.Remove (vec);</span><br><span class="line">return vec;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="完善逻辑"><a href="#完善逻辑" class="headerlink" title="完善逻辑"></a>完善逻辑</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">void createMap () &#123;</span><br><span class="line">// 创建外墙和地板</span><br><span class="line">createWallsAndFloors();</span><br><span class="line">// 创建内墙,食物</span><br><span class="line">createInner ();</span><br><span class="line">// 创建出口</span><br><span class="line">createExit ();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行游戏,查看效果</p><h3 id="地图基本创建完毕"><a href="#地图基本创建完毕" class="headerlink" title="地图基本创建完毕!!!"></a>地图基本创建完毕!!!</h3><p>其他信息请参看 <a href="https://blog.williamlovealisa.cn/2018/10/28/Unity2D%20Roguelike(%E4%BA%8C" target="_blank" rel="noopener">Unity 2D Rouguelike(二)</a>)</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="Unity" scheme="http://yoursite.com/categories/Unity/"/>
    
    
      <category term="Unity" scheme="http://yoursite.com/tags/Unity/"/>
    
  </entry>
  
  <entry>
    <title>C++学习一</title>
    <link href="http://yoursite.com/2018/10/21/C++%E5%AD%A6%E4%B9%A0%E4%B8%80/"/>
    <id>http://yoursite.com/2018/10/21/C++学习一/</id>
    <published>2018-10-21T14:11:43.000Z</published>
    <updated>2018-11-11T13:20:29.373Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h3 id="函数重载"><a href="#函数重载" class="headerlink" title="函数重载"></a>函数重载</h3><p>C++ 支持函数重载</p><p>源于name mangling 或者叫 name decoration 技术, C++编译过程会对符号名(函数和参数名)进行改编,修饰</p><p>注意: 如果涉及到隐式转换,可能会报错,产生二义性!</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">void sum(long a) &#123;</span><br><span class="line">cout &lt;&lt; a &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void sum(double a) &#123;</span><br><span class="line">cout &lt;&lt; a &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">int main () &#123;</span><br><span class="line"></span><br><span class="line">// 如果涉及到隐式转换报错</span><br><span class="line">sum(10);</span><br><span class="line"></span><br><span class="line">// 如果要消除,必须新增一个参数是int的方法,消除隐式转换</span><br><span class="line"></span><br><span class="line">return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="extern"><a href="#extern" class="headerlink" title="extern"></a>extern</h3><p>C++、C混合开发的时候,C++ 引用C 会出错,因为 上述的函数重载,</p><p>C 默认的函数名为 _函数名,但是C++的函数名会发生变化,编译时映射表无法对应</p><p>所以C++ 引用C 的时候需要使用extern,告诉编译器 某些地方使用C编译</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">// sum.h</span><br><span class="line"></span><br><span class="line">#ifndef _SUM_H</span><br><span class="line">#define _SUM_H</span><br><span class="line"></span><br><span class="line">#if __cplusplus</span><br><span class="line">extern &quot;C&quot; &#123;</span><br><span class="line">#endif</span><br><span class="line"></span><br><span class="line">int sum(int a, int b);</span><br><span class="line"></span><br><span class="line">#if __cplusplus</span><br><span class="line">&#125;</span><br><span class="line">#endif</span><br><span class="line"></span><br><span class="line">#endif</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">// sum.c</span><br><span class="line"></span><br><span class="line">#include &quot;sum.h&quot;</span><br><span class="line"></span><br><span class="line">int sum(int a, int b) &#123;</span><br><span class="line">return a + b;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注意: extern 可以修饰函数 <code>extern &quot;C&quot; func () {}</code> , 当函数申明和实现分离时,必须写在申明中,写在实现中会报错</p><h3 id="默认参数"><a href="#默认参数" class="headerlink" title="默认参数"></a>默认参数</h3><p>函数可以带默认参数,但是默认参数的顺序是从右向左, </p><p>简单来说,左边的形参没有默认参数,右边就不能有; 左边的形参有了默认参数,左边第二个才可以设置默认参数</p><p>注意: 默认参数与函数的重载一起使用时,可能导致二义性</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">void func (int a , int b = 12) &#123;&#125;</span><br><span class="line"></span><br><span class="line">void fund (int a) &#123;&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">// 调用下面的没问题</span><br><span class="line"></span><br><span class="line">func(10,20);</span><br><span class="line"></span><br><span class="line">// 调用下面的报错,二义性</span><br><span class="line"></span><br><span class="line">func(10);</span><br></pre></td></tr></table></figure><h3 id="函数指针"><a href="#函数指针" class="headerlink" title="函数指针"></a>函数指针</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">void func (int a, int b) &#123;&#125;</span><br><span class="line"></span><br><span class="line">void (*name)(int, int) = func</span><br></pre></td></tr></table></figure><p>OC Block的实现就是函数指针</p><h3 id="实参和形参"><a href="#实参和形参" class="headerlink" title="实参和形参"></a>实参和形参</h3><p>总结: </p><p>定义时 占位的参数 就是形参</p><p>调用时 实际赋值的参数  就是实参</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="C++" scheme="http://yoursite.com/categories/C/"/>
    
    
      <category term="C++" scheme="http://yoursite.com/tags/C/"/>
    
      <category term="游戏破解" scheme="http://yoursite.com/tags/%E6%B8%B8%E6%88%8F%E7%A0%B4%E8%A7%A3/"/>
    
  </entry>
  
  <entry>
    <title>Visual Studio Code 使用指南</title>
    <link href="http://yoursite.com/2018/10/16/Visual%20Studio%20Code%20%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/"/>
    <id>http://yoursite.com/2018/10/16/Visual Studio Code 使用指南/</id>
    <published>2018-10-16T08:09:39.000Z</published>
    <updated>2018-11-13T02:12:18.990Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h3 id="篇首语"><a href="#篇首语" class="headerlink" title="篇首语:"></a>篇首语:</h3><p>本文主要讨论的是 MAC 环境下的 VS Code 使用</p><p>本篇对应的 VS Code 版本是 1.28.2.</p><p>能力所限,了解的比较片面,讨论的也仅仅是 C++ 以及 C# (Unity)的使用,不足之处请指教或者留言.</p><h3 id="为什么使用-VS-Code"><a href="#为什么使用-VS-Code" class="headerlink" title="为什么使用 VS Code"></a>为什么使用 VS Code</h3><p>优点: 轻量级, 扩展性强</p><p>缺点: 需要配置,提示貌似不是很及时</p><h3 id="VS-Code-安装"><a href="#VS-Code-安装" class="headerlink" title="VS Code 安装"></a>VS Code 安装</h3><p><a href="https://visualstudio.microsoft.com/zh-hans/?rr=https%3A%2F%2Fwww.baidu.com%2Flink%3Furl%3DNAZso_MpT2UfyAFtJtoUVkbTE8io2_izLGJJ7zGZt2g3wh_LrRI2rn0BKwvvTLd9%26wd%3D%26eqid%3D9b6ead9600015c45000000025be7b062" target="_blank" rel="noopener">https://visualstudio.microsoft.com/zh-hans/?rr=https%3A%2F%2Fwww.baidu.com%2Flink%3Furl%3DNAZso_MpT2UfyAFtJtoUVkbTE8io2_izLGJJ7zGZt2g3wh_LrRI2rn0BKwvvTLd9%26wd%3D%26eqid%3D9b6ead9600015c45000000025be7b062</a></p><h3 id="C-使用"><a href="#C-使用" class="headerlink" title="C++ 使用"></a>C++ 使用</h3><h4 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h4><ol><li><code>Shift + Command + X</code> 跳转到扩展安装页面</li><li>搜索 <code>C/C++</code> , 找到<code>Microsoft</code> 出品的插件,标题为<code>C/C++ for Visual Studio Code</code></li><li>点击安装,然后点击重启以运行</li><li>搜索 <code>Code Runner</code> ,安装并重启</li><li>编写 C++ 程序, 按住 <code>Control + option + n</code> 以运行,但是目前是不支持 debug 的</li></ol><h4 id="CodeRunner-配置"><a href="#CodeRunner-配置" class="headerlink" title="CodeRunner 配置"></a>CodeRunner 配置</h4><h5 id="输出中无法编辑的问题"><a href="#输出中无法编辑的问题" class="headerlink" title="输出中无法编辑的问题"></a>输出中无法编辑的问题</h5><p>描述: 默认 CodeRunner 是无法输入的</p><p><code>shift+cmd+p</code> 打开 命令面板, 输入<code>open user settings</code>, </p><p>在右边的用户设置里面新增<br><code>&quot;code-runner.runInTerminal&quot;: true,</code></p><h5 id="自动保存文件"><a href="#自动保存文件" class="headerlink" title="自动保存文件"></a>自动保存文件</h5><p>在 .vscode 找到 setting.json,</p><p><code>&quot;code-runner.saveFileBeforeRun&quot;: true,</code></p><h5 id="每次提示已经CodeRunner-已经启动"><a href="#每次提示已经CodeRunner-已经启动" class="headerlink" title="每次提示已经CodeRunner 已经启动"></a>每次提示已经CodeRunner 已经启动</h5><p>在 .vscode 找到 setting.json,</p><p><code>&quot;code-runner.clearPreviousOutput&quot;: true,</code></p><h4 id="Debug相关"><a href="#Debug相关" class="headerlink" title="Debug相关"></a>Debug相关</h4><p><code>Shift + Command + D</code> 跳转到 Debug 边栏,点击边栏上方的齿轮按钮,出现了<code>launch.json</code> ,这个就是启动的配置文件,我们需要配置这个文件</p><h5 id="C-C-的基本信息配置"><a href="#C-C-的基本信息配置" class="headerlink" title="C/C++ 的基本信息配置"></a>C/C++ 的基本信息配置</h5><p><code>shift + command + P</code> 选择 <code>C/C++: Edit configration</code></p><p>打开<code>c_cpp_properties.json</code> 文件</p><p>默认配置如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;configurations&quot;: [</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;name&quot;: &quot;Mac&quot;,</span><br><span class="line">            &quot;includePath&quot;: [</span><br><span class="line">                &quot;$&#123;workspaceFolder&#125;/**&quot;</span><br><span class="line">            ],</span><br><span class="line">            &quot;defines&quot;: [</span><br><span class="line">                &quot;_DEBUG&quot;],</span><br><span class="line">            &quot;macFrameworkPath&quot;: [</span><br><span class="line">                &quot;/System/Library/Frameworks&quot;,</span><br><span class="line">                &quot;/Library/Frameworks&quot;</span><br><span class="line">            ],</span><br><span class="line">            &quot;compilerPath&quot;: &quot;/usr/bin/clang&quot;,</span><br><span class="line">            &quot;cStandard&quot;: &quot;c11&quot;,</span><br><span class="line">            &quot;cppStandard&quot;: &quot;c++17&quot;,</span><br><span class="line">            &quot;intelliSenseMode&quot;: &quot;clang-x64&quot;</span><br><span class="line">        &#125;</span><br><span class="line">    ],</span><br><span class="line">    &quot;version&quot;: 4</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>name : 配置信息的唯一标志</li><li>includePath : 头文件的路径</li><li>macFrameworkPath : mac 的标准头文件路径</li><li>compilerPath : 编译地址的全路径</li><li>cStandard : C 标准</li><li>cppStandard : C++ 标准</li><li>intelliSenseMode : 环境场景模式</li></ul><h5 id="C-编译的配置文件"><a href="#C-编译的配置文件" class="headerlink" title="C++ 编译的配置文件"></a>C++ 编译的配置文件</h5><p><code>Shift + command + P</code> 选择 <code>Tasks: Configure tasks</code>, 选择其他的模板</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    // See https://go.microsoft.com/fwlink/?LinkId=733558</span><br><span class="line">    // for the documentation about the tasks.json format</span><br><span class="line">    &quot;version&quot;: &quot;2.0.0&quot;,</span><br><span class="line">    &quot;tasks&quot;: [</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;label&quot;: &quot;Build&quot;,</span><br><span class="line">            &quot;command&quot;: &quot;g++&quot;,</span><br><span class="line">            &quot;args&quot;: [</span><br><span class="line">                &quot;-g&quot;,</span><br><span class="line">                &quot;-Wall&quot;,</span><br><span class="line">                &quot;-std=c++11&quot;,</span><br><span class="line">                &quot;-lm&quot;,</span><br><span class="line">                &quot;$&#123;file&#125;&quot;,</span><br><span class="line">                &quot;-o&quot;,</span><br><span class="line">                &quot;$&#123;fileDirname&#125;/$&#123;fileBasenameNoExtension&#125;.o&quot;</span><br><span class="line">            ],</span><br><span class="line">            &quot;windows&quot;: &#123;</span><br><span class="line">                &quot;args&quot;: [</span><br><span class="line">                    &quot;-g&quot;,</span><br><span class="line">                    &quot;-Wall&quot;,</span><br><span class="line">                    &quot;-std=c++11&quot;,</span><br><span class="line">                    &quot;-lm&quot;,</span><br><span class="line">                    &quot;$&#123;file&#125;&quot;,</span><br><span class="line">                    &quot;-o&quot;,</span><br><span class="line">                    &quot;$&#123;fileDirname&#125;/$&#123;fileBasenameNoExtension&#125;.exe&quot;</span><br><span class="line">                ]</span><br><span class="line">            &#125;,</span><br><span class="line">            &quot;presentation&quot;: &#123;</span><br><span class="line">                &quot;reveal&quot;: &quot;always&quot;,</span><br><span class="line">                &quot;echo&quot;: false,</span><br><span class="line">                &quot;focus&quot;: true</span><br><span class="line">            &#125;,</span><br><span class="line">            &quot;problemMatcher&quot;: &#123; // 将错误信息匹配到`问题`中去</span><br><span class="line">                &quot;owner&quot;: &quot;cpp&quot;,</span><br><span class="line">                &quot;fileLocation&quot;: &quot;absolute&quot;,</span><br><span class="line">                &quot;pattern&quot;: &#123;</span><br><span class="line">                    &quot;regexp&quot;: &quot;^(.*):(\\d+):(\\d+):\\s+(error):\\s+(.*)$&quot;,</span><br><span class="line">                    &quot;file&quot;: 1,</span><br><span class="line">                    &quot;line&quot;: 2,</span><br><span class="line">                    &quot;column&quot;: 3,</span><br><span class="line">                    &quot;severity&quot;: 4,</span><br><span class="line">                    &quot;message&quot;: 5</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;label&quot;: &quot;Run&quot;,</span><br><span class="line">            &quot;type&quot;: &quot;shell&quot;,</span><br><span class="line">            &quot;dependsOn&quot;: &quot;Build&quot;,</span><br><span class="line">            &quot;command&quot;: &quot;$&#123;fileDirname&#125;/$&#123;fileBasenameNoExtension&#125;.o&quot;,</span><br><span class="line">            &quot;windows&quot;: &#123;</span><br><span class="line">                &quot;command&quot;: &quot;$&#123;fileDirname&#125;/$&#123;fileBasenameNoExtension&#125;.exe&quot;</span><br><span class="line">            &#125;,</span><br><span class="line">            &quot;args&quot;: [],</span><br><span class="line">            &quot;presentation&quot;: &#123;</span><br><span class="line">                &quot;reveal&quot;: &quot;always&quot;,</span><br><span class="line">                &quot;focus&quot;: true</span><br><span class="line">            &#125;,</span><br><span class="line">            &quot;problemMatcher&quot;: [],</span><br><span class="line">            &quot;group&quot;: &#123;</span><br><span class="line">                &quot;kind&quot;: &quot;test&quot;,</span><br><span class="line">                &quot;isDefault&quot;: true</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="Debug-的配置文件"><a href="#Debug-的配置文件" class="headerlink" title="Debug 的配置文件"></a>Debug 的配置文件</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;version&quot;: &quot;0.2.0&quot;,</span><br><span class="line">    &quot;configurations&quot;: [</span><br><span class="line">        &#123;</span><br><span class="line">        &quot;name&quot;: &quot;c/c++ Debug&quot;,</span><br><span class="line">        &quot;type&quot;: &quot;cppdbg&quot;,</span><br><span class="line">        &quot;request&quot;: &quot;launch&quot;,</span><br><span class="line">        &quot;program&quot;: &quot;$&#123;workspaceFolder&#125;/a.out&quot;,</span><br><span class="line">        &quot;args&quot;: [],</span><br><span class="line">        &quot;stopAtEntry&quot;: false,</span><br><span class="line">        &quot;cwd&quot;: &quot;$&#123;workspaceFolder&#125;&quot;,</span><br><span class="line">        &quot;environment&quot;: [],</span><br><span class="line">        &quot;externalConsole&quot;: false,</span><br><span class="line">        &quot;MIMode&quot;: &quot;lldb&quot;,</span><br><span class="line">        &quot;preLaunchTask&quot;:&quot;c++&quot;</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;name&quot;: &quot;(lldb) Launch&quot;,</span><br><span class="line">            &quot;type&quot;: &quot;cppdbg&quot;,</span><br><span class="line">            &quot;request&quot;: &quot;launch&quot;,</span><br><span class="line">            &quot;program&quot;: &quot;$&#123;workspaceFolder&#125;/a.out&quot;,</span><br><span class="line">            &quot;args&quot;: [],</span><br><span class="line">            &quot;stopAtEntry&quot;: false,</span><br><span class="line">            &quot;cwd&quot;: &quot;$&#123;workspaceFolder&#125;&quot;,</span><br><span class="line">            &quot;environment&quot;: [],</span><br><span class="line">            &quot;externalConsole&quot;: true,</span><br><span class="line">            &quot;MIMode&quot;: &quot;lldb&quot;</span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="修改快捷键"><a href="#修改快捷键" class="headerlink" title="修改快捷键"></a>修改快捷键</h5><p>习惯使然,我习惯 <code>cmd + R 运行</code>, <code>cmd + B</code> 编译</p><p><code>shift + cmd + p</code> 搜索 <code>open keyboard shortcuts</code>, 选择高级自定义,打开<code>keyboardings.json</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[</span><br><span class="line">    &#123;</span><br><span class="line">        &quot;key&quot;: &quot;cmd+b&quot;,</span><br><span class="line">        &quot;command&quot;: &quot;workbench.action.tasks.runTask&quot;,</span><br><span class="line">        // &quot;args&quot;: &quot;Run tests&quot;,</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        &quot;key&quot;: &quot;cmd+r&quot;,</span><br><span class="line">        &quot;command&quot;: &quot;workbench.action.debug.run&quot;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure><h3 id="C-使用-1"><a href="#C-使用-1" class="headerlink" title="C# 使用"></a>C# 使用</h3><h4 id="配合-Unity-使用"><a href="#配合-Unity-使用" class="headerlink" title="配合 Unity 使用"></a>配合 Unity 使用</h4><p>搜索扩展 <code>unity3d-pack</code>, 安装.</p><p>需要等待安装其他东西一会儿.安装成功后</p><p>新建一个 unity 的C# 文件,在<code>Start()</code> 输入 <code>gameObject</code> 看有没有提示,如果没有提示,表明安装不完全,有错误</p><p>每次启动报错 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">The reference assemblies for framework &quot;.NETFramework,Version=v3.5&quot; were not found.</span><br></pre></td></tr></table></figure><p>安装环境检查</p><ul><li>检查 openssl 是否安装 <code>$ openssl version</code></li><li>检查 dotnet 是否安装 <code>$ dotnet</code></li><li>检查 mono 是否安装正确 <code>$ mono --version</code> ,一般都是这里有问题</li></ul><p>重新安装 <code>$ brew install mono</code>,如果安装过了 <code>$ brew reinstall mono</code></p><p>如果网络不行,可以自行下载<a href="https://www.mono-project.com/download/stable/" target="_blank" rel="noopener">https://www.mono-project.com/download/stable/</a></p><h4 id="Unity-调试"><a href="#Unity-调试" class="headerlink" title="Unity 调试"></a>Unity 调试</h4><p>运行 unity, 然后 运行VSCode Debug中的<code>Unity Editer</code>!</p><p><strong>Bingo!!!</strong></p><h3 id="存疑"><a href="#存疑" class="headerlink" title="存疑"></a>存疑</h3><p>mac 版本的 vc code 运行 c++ 时, 总是打开外部终端,我想直接使用 vscode 集成终端,不知道怎么弄,希望大家给予帮助!</p><h3 id="后续需要更新"><a href="#后续需要更新" class="headerlink" title="后续需要更新"></a>后续需要更新</h3><p>C++ 查看汇编</p><h3 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h3><p><a href="https://www.zhihu.com/question/30315894" target="_blank" rel="noopener">https://www.zhihu.com/question/30315894</a></p><p><a href="https://www.imakewebsites.ca/posts/2017/02/11/unity3d-vscode-os-x-reference-assemblies-not-found-error/" target="_blank" rel="noopener">https://www.imakewebsites.ca/posts/2017/02/11/unity3d-vscode-os-x-reference-assemblies-not-found-error/</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="工具使用" scheme="http://yoursite.com/categories/%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/"/>
    
    
      <category term="C++" scheme="http://yoursite.com/tags/C/"/>
    
      <category term="C#" scheme="http://yoursite.com/tags/C/"/>
    
      <category term="Unity" scheme="http://yoursite.com/tags/Unity/"/>
    
      <category term="VSCode" scheme="http://yoursite.com/tags/VSCode/"/>
    
  </entry>
  
  <entry>
    <title>iOS常见访问地址</title>
    <link href="http://yoursite.com/2018/10/15/iOS%E5%B8%B8%E8%A7%81%E8%AE%BF%E9%97%AE%E5%9C%B0%E5%9D%80/"/>
    <id>http://yoursite.com/2018/10/15/iOS常见访问地址/</id>
    <published>2018-10-15T01:57:48.000Z</published>
    <updated>2018-10-15T02:05:49.114Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h2 id="appleID登录地址"><a href="#appleID登录地址" class="headerlink" title="appleID登录地址"></a>appleID登录地址</h2><p><a href="https://appleid.apple.com/" target="_blank" rel="noopener">https://appleid.apple.com/</a></p><h2 id="苹果开发者账号"><a href="#苹果开发者账号" class="headerlink" title="苹果开发者账号"></a>苹果开发者账号</h2><p><a href="https://developer.apple.com/account/#/overview/G9AP62BQZD" target="_blank" rel="noopener">https://developer.apple.com/account/#/overview/G9AP62BQZD</a></p><h2 id="购买688元套餐地址"><a href="#购买688元套餐地址" class="headerlink" title="购买688元套餐地址"></a>购买688元套餐地址</h2><p><a href="https://developer.apple.com/enroll/cn" target="_blank" rel="noopener">https://developer.apple.com/enroll/cn</a></p><h2 id="苹果上架App-管理地址"><a href="#苹果上架App-管理地址" class="headerlink" title="苹果上架App 管理地址"></a>苹果上架App 管理地址</h2><p><a href="https://appstoreconnect.apple.com/" target="_blank" rel="noopener">https://appstoreconnect.apple.com/</a></p><h2 id="苹果iTunes下载地址"><a href="#苹果iTunes下载地址" class="headerlink" title="苹果iTunes下载地址"></a>苹果iTunes下载地址</h2><p><a href="https://itunes.apple.com/cn/genre/ios/id36?mt=8" target="_blank" rel="noopener">https://itunes.apple.com/cn/genre/ios/id36?mt=8</a></p><h2 id="苹果开源源码地址"><a href="#苹果开源源码地址" class="headerlink" title="苹果开源源码地址"></a>苹果开源源码地址</h2><p><a href="https://opensource.apple.com/tarballs/" target="_blank" rel="noopener">https://opensource.apple.com/tarballs/</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="iOS" scheme="http://yoursite.com/categories/iOS/"/>
    
    
      <category term="iOS" scheme="http://yoursite.com/tags/iOS/"/>
    
  </entry>
  
  <entry>
    <title>Unity 学习(二)</title>
    <link href="http://yoursite.com/2018/10/15/Unity%20%E5%AD%A6%E4%B9%A0(%E4%BA%8C)/"/>
    <id>http://yoursite.com/2018/10/15/Unity 学习(二)/</id>
    <published>2018-10-15T01:57:48.000Z</published>
    <updated>2018-11-13T02:10:59.059Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>这一篇主要介绍一些快捷的使用方式</p><h3 id="定义自己的Layout"><a href="#定义自己的Layout" class="headerlink" title="定义自己的Layout"></a>定义自己的Layout</h3><p>Unity默认有很多窗口,不同窗口的排布方式我们称之为Layout,在窗口的右上角</p><p>为了开发方便,我们可以自己调整窗口位置,如果窗口不小心关闭了,也别担心,到菜单栏的window 里面,可以再次点出来</p><p>我们选择自己喜欢的布局,然后点击右上角的layout,选择save lauout ,保存下自己的layout,取名随意,以后就可以使用自己的布局啦</p><h3 id="删除Projects里面不需要的工程"><a href="#删除Projects里面不需要的工程" class="headerlink" title="删除Projects里面不需要的工程"></a>删除Projects里面不需要的工程</h3><p>观察对应工程的目录地址,直接删除目录地址或者改变地址即可</p><h3 id="查看package下载的地址"><a href="#查看package下载的地址" class="headerlink" title="查看package下载的地址"></a>查看package下载的地址</h3><p>MAC地址</p><p><code>/Users/{用户名}/Library/Unity/Asset Store-5.x</code></p><p>Windows地址</p><p><code>C:\Users\{用户名}\AppData\Roaming\Unity\Asset Store-5.x</code></p><h3 id="在Scenes中自由查看"><a href="#在Scenes中自由查看" class="headerlink" title="在Scenes中自由查看"></a>在Scenes中自由查看</h3><p>Mac 下如何开启<code>开车模式</code>, 如果使用触控板, 双指同时点击下去,通过 <code>WASD</code> 控制,3D下效果明显</p><h3 id="Unity版本使用情况详解"><a href="#Unity版本使用情况详解" class="headerlink" title="Unity版本使用情况详解"></a>Unity版本使用情况详解</h3><p><a href="https://blog.uwa4d.com/archives/VersonAnalysis511.html" target="_blank" rel="noopener">https://blog.uwa4d.com/archives/VersonAnalysis511.html</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="Unity" scheme="http://yoursite.com/categories/Unity/"/>
    
    
      <category term="Unity" scheme="http://yoursite.com/tags/Unity/"/>
    
  </entry>
  
  <entry>
    <title>iOS App扫码下载</title>
    <link href="http://yoursite.com/2018/10/14/iOS%20App%E6%89%AB%E7%A0%81%E4%B8%8B%E8%BD%BD/"/>
    <id>http://yoursite.com/2018/10/14/iOS App扫码下载/</id>
    <published>2018-10-14T01:57:48.000Z</published>
    <updated>2018-11-08T07:46:45.646Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>目标: 通过扫二维码下载App,可以通过蒲公英,也很简单明了,这里我们自己搭建服务器来支持扫码下载</p><h2 id="第一步-准备一个https的服务器"><a href="#第一步-准备一个https的服务器" class="headerlink" title="第一步 准备一个https的服务器"></a>第一步 准备一个https的服务器</h2><p>本人是腾讯云的账户,搭建了https的环境</p><p>怎么搭建可以访问腾讯云 云+社区 开发者实验室 ,搜索ssl</p><h2 id="第二步-打包-准备plist"><a href="#第二步-打包-准备plist" class="headerlink" title="第二步 打包,准备plist"></a>第二步 打包,准备plist</h2><h3 id="打包"><a href="#打包" class="headerlink" title="打包"></a>打包</h3><p>生成ipa包,</p><p>貌似只有在开发者账户里面的用户可以安装,其他用户最后校验失败会导致安装失败</p><h3 id="准备plist"><a href="#准备plist" class="headerlink" title="准备plist"></a>准备plist</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span><br><span class="line">&lt;!DOCTYPE plist PUBLIC &quot;-//Apple//DTD PLIST 1.0//EN&quot; &quot;http://www.apple.com/DTDs/PropertyList-1.0.dtd&quot;&gt;</span><br><span class="line">&lt;plist version=&quot;1.0&quot;&gt;</span><br><span class="line">&lt;dict&gt;</span><br><span class="line">&lt;key&gt;items&lt;/key&gt;</span><br><span class="line">&lt;array&gt;</span><br><span class="line">&lt;dict&gt;</span><br><span class="line">&lt;key&gt;assets&lt;/key&gt;</span><br><span class="line">&lt;array&gt;</span><br><span class="line">&lt;dict&gt;</span><br><span class="line">&lt;key&gt;kind&lt;/key&gt;</span><br><span class="line">&lt;string&gt;software-package&lt;/string&gt;</span><br><span class="line">&lt;key&gt;url&lt;/key&gt;</span><br><span class="line">&lt;string&gt;http://123.206.68.204:1111/maarrytask.ipa&lt;/string&gt;</span><br><span class="line">&lt;/dict&gt;</span><br><span class="line">&lt;dict&gt;</span><br><span class="line">&lt;key&gt;kind&lt;/key&gt;</span><br><span class="line">&lt;string&gt;full-size-image&lt;/string&gt;</span><br><span class="line">&lt;key&gt;needs-shine&lt;/key&gt;</span><br><span class="line">&lt;false/&gt;</span><br><span class="line">&lt;key&gt;url&lt;/key&gt;</span><br><span class="line">&lt;string&gt;&lt;/string&gt;</span><br><span class="line">&lt;/dict&gt;</span><br><span class="line">&lt;dict&gt;</span><br><span class="line">&lt;key&gt;kind&lt;/key&gt;</span><br><span class="line">&lt;string&gt;display-image&lt;/string&gt;</span><br><span class="line">&lt;key&gt;needs-shine&lt;/key&gt;</span><br><span class="line">&lt;false/&gt;</span><br><span class="line">&lt;key&gt;url&lt;/key&gt;</span><br><span class="line">&lt;string&gt;安装过程显示图片&lt;/string&gt;</span><br><span class="line">&lt;/dict&gt;</span><br><span class="line">&lt;/array&gt;</span><br><span class="line">&lt;key&gt;metadata&lt;/key&gt;</span><br><span class="line">&lt;dict&gt;</span><br><span class="line">&lt;key&gt;bundle-identifier&lt;/key&gt;</span><br><span class="line">&lt;string&gt;com.techotc.DigitSign&lt;/string&gt;</span><br><span class="line">&lt;key&gt;bundle-version&lt;/key&gt;</span><br><span class="line">&lt;string&gt;1.0&lt;/string&gt;</span><br><span class="line">&lt;key&gt;kind&lt;/key&gt;</span><br><span class="line">&lt;string&gt;software&lt;/string&gt;</span><br><span class="line">&lt;key&gt;title&lt;/key&gt;</span><br><span class="line">&lt;string&gt;packName&lt;/string&gt;</span><br><span class="line">&lt;key&gt;subtitle&lt;/key&gt;</span><br><span class="line">&lt;string&gt;副标题&lt;/string&gt;</span><br><span class="line">&lt;/dict&gt;</span><br><span class="line">&lt;/dict&gt;</span><br><span class="line">&lt;/array&gt;</span><br><span class="line">&lt;/dict&gt;</span><br><span class="line">&lt;/plist&gt;</span><br></pre></td></tr></table></figure><ul><li>bundle-identifier 必须修改</li><li>title   必须修改,改成包名/或者修改名</li><li>bundle-version  最好也修改下</li><li>url  必须要修改,修改为域名下地址</li><li>display-image 一般需要修改为Logo的图片地址</li></ul><h3 id="上传到服务器"><a href="#上传到服务器" class="headerlink" title="上传到服务器"></a>上传到服务器</h3><p>本人上传到https的根目录</p><p>具体是/usr/share/nginx/html</p><p>通过mac的ssh远程拷贝过去</p><p>命令:</p><p><code>scp /Users/yourname/Desktop/xxx.ipa root@123.206.68.xx:/usr/share/nginx/html/xx.ipa</code></p><p><code>scp /Users/yourname/Desktop/xxx.plist root@123.206.68.xx:/usr/share/nginx/html/xx.plist</code></p><p>需要输入服务器root密码</p><h3 id="配置修改"><a href="#配置修改" class="headerlink" title="配置修改"></a>配置修改</h3><p>将plist的url修改为<a href="https://yourdomain/xxx.ipa" target="_blank" rel="noopener">https://yourdomain/xxx.ipa</a></p><h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><p>直接访问 <a href="https://yourdomain/xxx.plist" target="_blank" rel="noopener">https://yourdomain/xxx.plist</a> 检验是否可以直接访问</p><h2 id="准备一个下载页面"><a href="#准备一个下载页面" class="headerlink" title="准备一个下载页面"></a>准备一个下载页面</h2><h2 id="核心代码"><a href="#核心代码" class="headerlink" title="核心代码"></a>核心代码</h2><p>跳转的核心代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href=&quot;itms-services://?action=download-manifest&amp;amp;url=https://yourdomain/xxx.plist&quot;&gt;点击下载&lt;/a&gt;</span><br></pre></td></tr></table></figure><h2 id="上传到服务器-1"><a href="#上传到服务器-1" class="headerlink" title="上传到服务器"></a>上传到服务器</h2><p><code>scp /Users/yourname/Desktop/download.html root@123.206.68.xx:/usr/share/nginx/html/download.html</code></p><h2 id="生成二维码"><a href="#生成二维码" class="headerlink" title="生成二维码"></a>生成二维码</h2><p>首先测试 <a href="https://yourdomain/download.html可以正常访问" target="_blank" rel="noopener">https://yourdomain/download.html可以正常访问</a></p><p>使用草料二维码生成,也可以自己使用coreImage</p><h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><p><a href="https://blog.csdn.net/pzlsun/article/details/52080491" target="_blank" rel="noopener">https://blog.csdn.net/pzlsun/article/details/52080491</a></p><p><a href="https://blog.csdn.net/klshuo/article/details/50485038" target="_blank" rel="noopener">https://blog.csdn.net/klshuo/article/details/50485038</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="iOS" scheme="http://yoursite.com/categories/iOS/"/>
    
    
      <category term="iOS" scheme="http://yoursite.com/tags/iOS/"/>
    
  </entry>
  
  <entry>
    <title>Unity 学习(一)</title>
    <link href="http://yoursite.com/2018/10/11/Unity%20%E5%AD%A6%E4%B9%A0(%E4%B8%80)/"/>
    <id>http://yoursite.com/2018/10/11/Unity 学习(一)/</id>
    <published>2018-10-11T08:09:39.000Z</published>
    <updated>2018-10-12T08:02:55.420Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h2 id="Unity-下载"><a href="#Unity-下载" class="headerlink" title="Unity 下载"></a>Unity 下载</h2><p>建议下载 个人版</p><p><a href="https://store.unity.com/products/unity-personal?_ga=2.170905952.1914627832.1539259756-39692342.1530083881" target="_blank" rel="noopener">https://store.unity.com/products/unity-personal?_ga=2.170905952.1914627832.1539259756-39692342.1530083881</a></p><h2 id="Unity-启动"><a href="#Unity-启动" class="headerlink" title="Unity 启动"></a>Unity 启动</h2><p><img src="/2018/10/11/Unity 学习(一)/CreateNew.png" alt=""></p><h2 id="Unity-界面介绍"><a href="#Unity-界面介绍" class="headerlink" title="Unity 界面介绍"></a>Unity 界面介绍</h2><p><img src="/2018/10/11/Unity 学习(一)/Unity基本面板介绍.jpg" alt="基本面板"></p><h2 id="Unity-设置栏介绍"><a href="#Unity-设置栏介绍" class="headerlink" title="Unity 设置栏介绍"></a>Unity 设置栏介绍</h2><h3 id="Unity"><a href="#Unity" class="headerlink" title="Unity"></a>Unity</h3><p><img src="/2018/10/11/Unity 学习(一)/UnitySetting.png" alt="设置栏"></p><h4 id="Unity-Preferences"><a href="#Unity-Preferences" class="headerlink" title="Unity Preferences"></a>Unity Preferences</h4><p>General</p><p><img src="/2018/10/11/Unity 学习(一)/Preference_General.png" alt="xx"></p><p>External Tool</p><p><img src="/2018/10/11/Unity 学习(一)/Preference_ExternalTool.png" alt="xx"></p><p>Color</p><p><img src="/2018/10/11/Unity 学习(一)/Preference_Color.png" alt=""></p><p>GI Cache</p><p><img src="/2018/10/11/Unity 学习(一)/Preference_Cache.png" alt=""></p><p>2D</p><p><img src="/2018/10/11/Unity 学习(一)/Preference_2D.png" alt=""></p><p>Cache Server</p><p><img src="/2018/10/11/Unity 学习(一)/Preference_CacheServer.png" alt=""></p><h3 id="File"><a href="#File" class="headerlink" title="File"></a>File</h3><p><img src="/2018/10/11/Unity 学习(一)/Unity_File.png" alt=""></p><p>BuildSetting</p><p><img src="/2018/10/11/Unity 学习(一)/File_BuildSetting.png" alt=""></p><h3 id="Asset"><a href="#Asset" class="headerlink" title="Asset"></a>Asset</h3><p><img src="/2018/10/11/Unity 学习(一)/Asset_List.png" alt=""></p><h2 id="其他介绍"><a href="#其他介绍" class="headerlink" title="其他介绍"></a>其他介绍</h2><h3 id="坐标"><a href="#坐标" class="headerlink" title="坐标"></a>坐标</h3><p><img src="/2018/10/11/Unity 学习(一)/基本操作.png" alt=""></p><h3 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h3><p><img src="/2018/10/11/Unity 学习(一)/Others.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="Unity" scheme="http://yoursite.com/categories/Unity/"/>
    
    
      <category term="C#" scheme="http://yoursite.com/tags/C/"/>
    
      <category term="Unity" scheme="http://yoursite.com/tags/Unity/"/>
    
  </entry>
  
  <entry>
    <title>移动端游戏开发分析</title>
    <link href="http://yoursite.com/2018/10/10/%E7%A7%BB%E5%8A%A8%E7%AB%AF%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91%E5%88%86%E6%9E%90/"/>
    <id>http://yoursite.com/2018/10/10/移动端游戏开发分析/</id>
    <published>2018-10-10T08:09:39.000Z</published>
    <updated>2018-10-12T02:00:34.552Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h2 id="现状分析"><a href="#现状分析" class="headerlink" title="现状分析"></a>现状分析</h2><h3 id="公司现状"><a href="#公司现状" class="headerlink" title="公司现状"></a>公司现状</h3><p>项目结束后移动端会进入一段时间的休整期,有一定的时间和精力,公司的开发人员没有进行过游戏开发,不了解开发相关事项.</p><h3 id="技术现状"><a href="#技术现状" class="headerlink" title="技术现状"></a>技术现状</h3><p>目前技术还未掌握,但是语言相关的基础已经有了,常见的游戏脚本语言有C / C++ , C# , javascript等</p><h3 id="市场现状"><a href="#市场现状" class="headerlink" title="市场现状"></a>市场现状</h3><p>游戏市场永远没有饱和,但是游戏是有寿命的,一般的单机游戏盈利寿命最长是半年,网络游戏也是需要通过不断更新新的内容来维持用户的新鲜感,才能延续下去</p><p>好的游戏寿命一般较长,差的游戏说不定刚出来就死了.</p><p>移动端游戏是新兴市场,游戏质量一般只要过关,总有人玩,但是必须要有人去刷榜,保持下载量</p><h2 id="技术选型"><a href="#技术选型" class="headerlink" title="技术选型"></a>技术选型</h2><h3 id="语言选择"><a href="#语言选择" class="headerlink" title="语言选择"></a>语言选择</h3><p>了解C/C++ 或者了解 C# 语言基本语法</p><h3 id="工具选择"><a href="#工具选择" class="headerlink" title="工具选择"></a>工具选择</h3><h5 id="Unity"><a href="#Unity" class="headerlink" title="Unity"></a>Unity</h5><p>优点: 简单易用,支持3D,2D,功能全面,资料众多,前端游戏首选</p><p>缺点: 资源占用较大,渲染较差,内存管理欠缺</p><p>团队模式收费</p><p>移动端对渲染要求较低,所以一般优先选择Unity</p><h5 id="Cocos2d-x"><a href="#Cocos2d-x" class="headerlink" title="Cocos2d-x"></a>Cocos2d-x</h5><p>优点: 简单,易用, 免费</p><p>缺点: 提升到3D表现一般,过时,现在社区不活跃</p><p>百度百科显示Cocos2d-x 占据高低端市场 超过70%,但是那已经是2013年的数据,这几年Unity的表现十分抢眼,优先选择Unity</p><h5 id="UE4"><a href="#UE4" class="headerlink" title="UE4"></a>UE4</h5><p>优点: 渲染优秀,内存优化好,占用资源适中,工具免费</p><p>缺点: 学习稍微困难,学习资源少</p><p>学习完Unity如果需要进阶,我们可以直接切换到UE4,渲染效果会提升非常大,有Unity的基础,UE4也会非常好学</p><h3 id="资源选择"><a href="#资源选择" class="headerlink" title="资源选择"></a>资源选择</h3><p>建议淘宝直接购买资源,或者选择maya制作资源</p><p>maya 下载目录 <a href="http://www.ifunmac.com/2017/10/maya-2018-1/" target="_blank" rel="noopener">http://www.ifunmac.com/2017/10/maya-2018-1/</a><br>maya 学习目录 <a href="https://huke88.com/route/maya.html?sem=baidu&amp;kw=106402" target="_blank" rel="noopener">https://huke88.com/route/maya.html?sem=baidu&amp;kw=106402</a></p><h3 id="建议分工"><a href="#建议分工" class="headerlink" title="建议分工"></a>建议分工</h3><p>美术可以有专门的人研究下maya,maya现在也是傻瓜式建模</p><p>地图模型需要有人跟进</p><p>益智类需要关卡设计</p><p>需要有美工提供原图,或者淘宝购买原图,或者逆向别人的图</p><p>代码开发前期可以都投入,后期撤出研究其他内容</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="Unity" scheme="http://yoursite.com/categories/Unity/"/>
    
    
      <category term="C#" scheme="http://yoursite.com/tags/C/"/>
    
      <category term="Unity" scheme="http://yoursite.com/tags/Unity/"/>
    
  </entry>
  
  <entry>
    <title>Unity 破解版下载</title>
    <link href="http://yoursite.com/2018/10/10/Unity%20%E7%A0%B4%E8%A7%A3%E7%89%88%E4%B8%8B%E8%BD%BD/"/>
    <id>http://yoursite.com/2018/10/10/Unity 破解版下载/</id>
    <published>2018-10-10T02:59:49.000Z</published>
    <updated>2018-11-16T09:15:18.395Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h2 id="声明"><a href="#声明" class="headerlink" title="声明"></a>声明</h2><p>本文仅供技术交流,没有任何商业目的.</p><h2 id="针对人群"><a href="#针对人群" class="headerlink" title="针对人群"></a>针对人群</h2><p>mac 环境下的Unity 开发人员</p><h2 id="破解版步骤"><a href="#破解版步骤" class="headerlink" title="破解版步骤"></a>破解版步骤</h2><h3 id="首先下载Unity-官方版本"><a href="#首先下载Unity-官方版本" class="headerlink" title="首先下载Unity 官方版本"></a>首先下载Unity 官方版本</h3><p>目前试验支持的版本到<code>2018.2.15f1</code><br><a href="https://unity3d.com/cn/get-unity/download/archive" target="_blank" rel="noopener">https://unity3d.com/cn/get-unity/download/archive</a></p><h3 id="按照步骤一直下一步"><a href="#按照步骤一直下一步" class="headerlink" title="按照步骤一直下一步"></a>按照步骤一直下一步</h3><p>安装成功即可,先不要打开</p><h3 id="下载破解软件"><a href="#下载破解软件" class="headerlink" title="下载破解软件"></a>下载破解软件</h3><p>链接:<a href="https://pan.baidu.com/s/1_IKsotfeoSQhxMUMy7LGVA" target="_blank" rel="noopener">https://pan.baidu.com/s/1_IKsotfeoSQhxMUMy7LGVA</a><br>密码:787v</p><p>下载后打开,如图所示</p><p><img src="/2018/10/10/Unity 破解版下载/pojie1.png" alt=""></p><p>到<code>应用程序</code> 里面找到Unity, 拖动到上面针筒的位置,然后点击<code>+</code>号.</p><p>然后，点击破解工具的工具栏：<code>Tools-&gt;Copy Unity License files</code>。破解完成。</p><h2 id="参看文档"><a href="#参看文档" class="headerlink" title="参看文档"></a>参看文档</h2><p><a href="http://www.ceeger.com/forum/read.php?tid=23396&amp;fid=8&amp;page=1" target="_blank" rel="noopener">http://www.ceeger.com/forum/read.php?tid=23396&amp;fid=8&amp;page=1</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="Unity" scheme="http://yoursite.com/categories/Unity/"/>
    
      <category term="Unity破解" scheme="http://yoursite.com/categories/Unity/Unity%E7%A0%B4%E8%A7%A3/"/>
    
    
      <category term="Unity" scheme="http://yoursite.com/tags/Unity/"/>
    
  </entry>
  
  <entry>
    <title>Xcode Command工具开发</title>
    <link href="http://yoursite.com/2018/10/10/Xcode%20Command%E5%B7%A5%E5%85%B7%E5%BC%80%E5%8F%91/"/>
    <id>http://yoursite.com/2018/10/10/Xcode Command工具开发/</id>
    <published>2018-10-10T02:53:56.000Z</published>
    <updated>2018-10-10T08:41:49.120Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>目标: 编写一个swift语言的命令行工具,用于识别回文以及异构词</p><h3 id="创建swift的CommandLineTool工程"><a href="#创建swift的CommandLineTool工程" class="headerlink" title="创建swift的CommandLineTool工程"></a>创建swift的CommandLineTool工程</h3><p><code>shift + command + N</code></p><p>选择 <code>macOS -&gt; Application -&gt; Command Line Tool</code></p><p>Swift 没有了传统的main 函数,但是有一个<code>main.swift</code>文件, main函数被隐藏了</p><h3 id="创建命令行的输出"><a href="#创建命令行的输出" class="headerlink" title="创建命令行的输出"></a>创建命令行的输出</h3><p>通常命令行工具会将 <code>执行的命令</code>,<code>标准的输出</code>,<code>错误信息</code>打印在控制台</p><p><code>错误信息</code>也会以特殊颜色展示在控制台,我们先编写一个输出流的打印工具</p><p>创建一个swift 文件, 名称为<code>ConsoleIO.swift</code></p><p>内容填充如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">//</span><br><span class="line">//  ConsoleIO.swift</span><br><span class="line">//  FindPhone</span><br><span class="line">//</span><br><span class="line">//  Created by WilliamJi on 2018/10/10.</span><br><span class="line">//  Copyright © 2018年 WilliamJi. All rights reserved.</span><br><span class="line">//  基本输出工具类</span><br><span class="line"></span><br><span class="line">import Foundation</span><br><span class="line"></span><br><span class="line">// 输出类型</span><br><span class="line">enum OutputType &#123;</span><br><span class="line">    case error</span><br><span class="line">    case standard</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 输出</span><br><span class="line">class ConsoleIO: NSObject &#123;</span><br><span class="line">    </span><br><span class="line">    // 输出信息,输出内容,和类型</span><br><span class="line">    </span><br><span class="line">    // .standard选项使用print,会写入到stdout. .error选项会使用c函数fputs写入信息到全局并且指向标准错误流的stderr</span><br><span class="line">    public func writeMessage(_ message: String, to: OutputType = .standard) &#123;</span><br><span class="line">        switch to &#123;</span><br><span class="line">        case .standard:</span><br><span class="line">            print(&quot;\(message)&quot;)</span><br><span class="line">        case .error:</span><br><span class="line">            fputs(&quot;Error: \(message)\n&quot;, stderr)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    // 打印基本的信息</span><br><span class="line">    public func printUsage() &#123;</span><br><span class="line">        </span><br><span class="line">        let executableName = (CommandLine.arguments[0] as NSString).lastPathComponent</span><br><span class="line">        </span><br><span class="line">        writeMessage(&quot;usage:&quot;)</span><br><span class="line">        writeMessage(&quot;\(executableName) -a string1 string2&quot;)</span><br><span class="line">        writeMessage(&quot;or&quot;)</span><br><span class="line">        writeMessage(&quot;\(executableName) -p string&quot;)</span><br><span class="line">        writeMessage(&quot;or&quot;)</span><br><span class="line">        writeMessage(&quot;\(executableName) -h to show usage information&quot;)</span><br><span class="line">        writeMessage(&quot;Type \(executableName) without an option to enter interactive mode.&quot;)</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="创建一个执行类"><a href="#创建一个执行类" class="headerlink" title="创建一个执行类"></a>创建一个执行类</h3><p>创建一个<code>MainTask.swift</code>, 填充内容如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">//</span><br><span class="line">//  MainTask.swift</span><br><span class="line">//  FindPhone</span><br><span class="line">//</span><br><span class="line">//  Created by WilliamJi on 2018/10/10.</span><br><span class="line">//  Copyright © 2018年 WilliamJi. All rights reserved.</span><br><span class="line">//  工具的主要逻辑</span><br><span class="line"></span><br><span class="line">import Foundation</span><br><span class="line"></span><br><span class="line">class MainTask &#123;</span><br><span class="line">    let cons = ConsoleIO()</span><br><span class="line">    </span><br><span class="line">    func run() &#123;</span><br><span class="line">        cons.printUsage()</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在main.swift中执行</p><p><code>MainTask().run()</code></p><h3 id="命令行参数"><a href="#命令行参数" class="headerlink" title="命令行参数"></a>命令行参数</h3><p>一般命令行后面的参数分为两种: 一种是类似于 -p 的option属性,一种是string内容信息</p><h4 id="首先设置option枚举类型"><a href="#首先设置option枚举类型" class="headerlink" title="首先设置option枚举类型"></a>首先设置option枚举类型</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">// 选项卡枚举</span><br><span class="line">enum OptionType:String &#123;</span><br><span class="line">    // 回文</span><br><span class="line">    case palindrome = &quot;p&quot;</span><br><span class="line">    // 检测变位字</span><br><span class="line">    case anagram = &quot;a&quot;</span><br><span class="line">    // 帮助</span><br><span class="line">    case help = &quot;h&quot;</span><br><span class="line">    // 其他</span><br><span class="line">    case unknown</span><br><span class="line">    </span><br><span class="line">    // 创建枚举</span><br><span class="line">    init(value: String) &#123;</span><br><span class="line">        switch value &#123;</span><br><span class="line">        case &quot;a&quot;: self = .anagram</span><br><span class="line">        case &quot;p&quot;: self = .palindrome</span><br><span class="line">        case &quot;h&quot;: self = .help</span><br><span class="line">        default: self = .unknown</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="修改MainTask-swift"><a href="#修改MainTask-swift" class="headerlink" title="修改MainTask.swift"></a>修改MainTask.swift</h4><p>新增读取字符串option转换为枚举的方法</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">// 根据选项的字符串,返回一个元组,包括变换的枚举和本身</span><br><span class="line">    func getOption(_ option: String) -&gt; (option:OptionType, value: String) &#123;</span><br><span class="line">        return (OptionType(value: option), option)</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>修改run方法</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">func run() &#123;</span><br><span class="line">//        cons.printUsage()</span><br><span class="line">        </span><br><span class="line">        // 1. 获取参数的个数</span><br><span class="line">        let argc = CommandLine.argc</span><br><span class="line">        </span><br><span class="line">        // 2. 获取第1个参数</span><br><span class="line">        let argv1 = CommandLine.arguments[1]</span><br><span class="line">        </span><br><span class="line">        // 3. 获取option</span><br><span class="line">        let (option,value) = getOption(argv1.replacingOccurrences(of: &quot;-&quot;, with: &quot;&quot;))</span><br><span class="line">        </span><br><span class="line">        // 4. 打印option的内容和枚举</span><br><span class="line">        cons.writeMessage(&quot;Argument count: \(argc) Option: \(option) value: \(value)&quot;)</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>在main.swift中添加判断</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">if CommandLine.argc &lt; 2 &#123;</span><br><span class="line">    //TODO: 少于2个参数开启交互模式</span><br><span class="line">&#125;else &#123;</span><br><span class="line">    MainTask().run()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h4><p>找到product中的mach-o 文件Test, open in finder查看,在终端下输入</p><p><code>./Test -a</code></p><p>或者</p><p>在 <code>Edit Scheme</code> Run 中的 <code>Arguments</code> 的 <code>Argument Passed On Launch</code> 点击 + 号,新增一个参数 <code>-p</code> ,直接运行xcode即可</p><h3 id="回文和变位词"><a href="#回文和变位词" class="headerlink" title="回文和变位词"></a>回文和变位词</h3><p>什么是回文: </p><p>回文就是从前往后和从后往前读都是一样的次</p><p>比如 <code>noon</code> <code>level</code> </p><p>什么是变位词</p><p>就是用其他的词里面每个字母变换位置获得的新词</p><p><code>silent &lt;-&gt; listen</code></p><h4 id="我们需要检测回文和变位词"><a href="#我们需要检测回文和变位词" class="headerlink" title="我们需要检测回文和变位词"></a>我们需要检测回文和变位词</h4><p>新增一个StringExtension.swift类</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">//</span><br><span class="line">//  StringExtension.swift</span><br><span class="line">//  FindPhone</span><br><span class="line">//</span><br><span class="line">//  Created by WilliamJi on 2018/10/10.</span><br><span class="line">//  Copyright © 2018年 WilliamJi. All rights reserved.</span><br><span class="line">//  字符串的扩展</span><br><span class="line"></span><br><span class="line">import Foundation</span><br><span class="line"></span><br><span class="line">extension String &#123;</span><br><span class="line">    // 检测回文</span><br><span class="line">    func isPalindrome() -&gt; Bool &#123;</span><br><span class="line">        // 小写去空格</span><br><span class="line">        let old = self.lowercased().replacingOccurrences(of: &quot; &quot;, with: &quot;&quot;)</span><br><span class="line">        let new = String(old.reversed())</span><br><span class="line">        return old == new</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    // 检测是否是异构词</span><br><span class="line">    func isAnagramOf(_ s: String) -&gt; Bool &#123;</span><br><span class="line">        // 获取旧词的无空格小写内容</span><br><span class="line">        let old = self.lowercased().replacingOccurrences(of: &quot; &quot;, with: &quot;&quot;)</span><br><span class="line">        // 获取新词的无空格小写内容</span><br><span class="line">        let new = s.lowercased().replacingOccurrences(of: &quot; &quot;, with: &quot;&quot;)</span><br><span class="line">        // 重新排序并比较</span><br><span class="line">        return old.sorted() == new.sorted()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="修改run方法"><a href="#修改run方法" class="headerlink" title="修改run方法"></a>修改run方法</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">        // 4. 打印option的内容和枚举</span><br><span class="line">//        cons.writeMessage(&quot;Argument count: \(argc) Option: \(option) value: \(value)&quot;)</span><br><span class="line">        </span><br><span class="line">        // 4. 检测回文和构词法</span><br><span class="line">        </span><br><span class="line">        switch option &#123;</span><br><span class="line">        case .palindrome: // 检测回文</span><br><span class="line">            if argc != 3 &#123;</span><br><span class="line">                if argc &gt; 3 &#123;</span><br><span class="line">                    cons.writeMessage(&quot;参数过多&quot;, to: .error)</span><br><span class="line">                &#125;else&#123;</span><br><span class="line">                    cons.writeMessage(&quot;参数过少&quot;, to: .error)</span><br><span class="line">                &#125;</span><br><span class="line">                cons.printUsage()</span><br><span class="line">            &#125;else &#123;</span><br><span class="line">                let s = CommandLine.arguments[2]</span><br><span class="line">                cons.writeMessage(&quot;\(s) \(s.isPalindrome() ? &quot;&quot; : &quot;不&quot;)是回文&quot;)</span><br><span class="line">            &#125;</span><br><span class="line">            break</span><br><span class="line">            </span><br><span class="line">        case .anagram:</span><br><span class="line">            if argc != 4 &#123;</span><br><span class="line">                if argc &gt; 4 &#123;</span><br><span class="line">                    cons.writeMessage(&quot;参数过多&quot;, to: .error)</span><br><span class="line">                &#125;else&#123;</span><br><span class="line">                    cons.writeMessage(&quot;参数过少&quot;, to: .error)</span><br><span class="line">                &#125;</span><br><span class="line">                cons.printUsage()</span><br><span class="line">            &#125;else&#123;</span><br><span class="line">                let str1 = CommandLine.arguments[2]</span><br><span class="line">                let str2 = CommandLine.arguments[3]</span><br><span class="line">                cons.writeMessage(&quot;\(str2)\(str1.isAnagramOf(str2) ? &quot;&quot; : &quot;不&quot;)是\(str1)的异构词&quot;)</span><br><span class="line">            &#125;</span><br><span class="line">            break</span><br><span class="line">        case .help:</span><br><span class="line">            cons.printUsage()</span><br><span class="line">            break</span><br><span class="line">        default:</span><br><span class="line">            cons.writeMessage(&quot;未知的参数&quot;)</span><br><span class="line">            cons.printUsage()</span><br><span class="line">            break</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><h4 id="测试下"><a href="#测试下" class="headerlink" title="测试下"></a>测试下</h4><p>方法同上</p><h3 id="交互式"><a href="#交互式" class="headerlink" title="交互式"></a>交互式</h3><h4 id="获取内容"><a href="#获取内容" class="headerlink" title="获取内容"></a>获取内容</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">// 输入提示内容,获取输入信息</span><br><span class="line">    func getInput(msg:String) -&gt; String &#123;</span><br><span class="line">        // 0. 输出内容</span><br><span class="line">        self.writeMessage(msg)</span><br><span class="line">        // 1. 获取键盘</span><br><span class="line">        let keyboard = FileHandle.standardInput</span><br><span class="line">        // 2. 键盘获取的值</span><br><span class="line">        let inputData = keyboard.availableData</span><br><span class="line">        // 3. 解析</span><br><span class="line">        let strData = String(data: inputData, encoding: String.Encoding.utf8)!</span><br><span class="line">        // 4. 移除换行返回文字</span><br><span class="line">        return strData.trimmingCharacters(in: CharacterSet.newlines)</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h4 id="逻辑添加"><a href="#逻辑添加" class="headerlink" title="逻辑添加"></a>逻辑添加</h4><p>OptionType枚举中新增一个quit</p><p><code>case quit = &quot;q&quot;</code></p><p>在init方法中新增 <code>case &quot;q&quot;: self = .quit</code></p><p>在MainTask.swift新增函数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">func interactiveMode() &#123;</span><br><span class="line">        cons.writeMessage(&quot;欢迎使用本系统,本系统检测回文以及异构体&quot;)</span><br><span class="line">        var isFinish = false</span><br><span class="line">        </span><br><span class="line">        while !isFinish &#123;</span><br><span class="line">            let (opt,val) = getOption(cons.getInput(msg: &quot;输入a 检测异构体, 输入p 检测回文,输入q 退出&quot;))</span><br><span class="line">            switch opt &#123;</span><br><span class="line">            case .anagram:</span><br><span class="line">                let fir = cons.getInput(msg: &quot;输入第一个单词&quot;)</span><br><span class="line">                let sec = cons.getInput(msg: &quot;输入第二个单词&quot;)</span><br><span class="line">                cons.writeMessage(&quot;\(fir)和\(sec) \(fir.isAnagramOf(sec) ? &quot;&quot; : &quot;不&quot;)是异构体&quot;)</span><br><span class="line">                </span><br><span class="line">                break</span><br><span class="line">            case .palindrome:</span><br><span class="line">                let value = cons.getInput(msg: &quot;请输入单词&quot;)</span><br><span class="line">                cons.writeMessage(&quot;\(value)\(value.isPalindrome() ? &quot;&quot; : &quot;不&quot;)是回文&quot;)</span><br><span class="line">                break</span><br><span class="line">            case .quit:</span><br><span class="line">                isFinish = true</span><br><span class="line">                break</span><br><span class="line">            default:</span><br><span class="line">                cons.writeMessage(&quot;Unknown option \(val)&quot;, to: .error)</span><br><span class="line">                break</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h3 id="打印字体颜色转变"><a href="#打印字体颜色转变" class="headerlink" title="打印字体颜色转变"></a>打印字体颜色转变</h3><p>我们需要err的打印文字是红色的</p><p>修改两个case</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">case .standard:</span><br><span class="line">print(&quot;\u&#123;001B&#125;[;m\(message)&quot;)</span><br><span class="line">break</span><br><span class="line">case .error:</span><br><span class="line">fputs(&quot;\u&#123;001B&#125;[0;31m\(message)\n&quot;, stderr)</span><br><span class="line">break</span><br></pre></td></tr></table></figure><h4 id="字体颜色汇总"><a href="#字体颜色汇总" class="headerlink" title="字体颜色汇总"></a>字体颜色汇总</h4><p>待续…</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="iOS" scheme="http://yoursite.com/categories/iOS/"/>
    
    
      <category term="Command" scheme="http://yoursite.com/tags/Command/"/>
    
      <category term="iOS" scheme="http://yoursite.com/tags/iOS/"/>
    
  </entry>
  
  <entry>
    <title>Xcode9  如何支持iOS 12设备调试</title>
    <link href="http://yoursite.com/2018/10/10/Xcode9%20%20%E5%A6%82%E4%BD%95%E6%94%AF%E6%8C%81iOS%2012%E8%AE%BE%E5%A4%87%E8%B0%83%E8%AF%95/"/>
    <id>http://yoursite.com/2018/10/10/Xcode9  如何支持iOS 12设备调试/</id>
    <published>2018-10-10T02:53:56.000Z</published>
    <updated>2018-10-17T06:09:04.626Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h2 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h2><p>Xcode9 不支持 iOS 12 调试是因为缺少对应的调试包</p><p>支持设备的调试包 目录为<code>/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/DeviceSupport</code></p><p>可以在Finder 中 通过<code>shift + command + G</code>, 键入上述地址进行快速定位</p><p>下载iOS 12 的调试包,安装到上述目录即可</p><h2 id="资源"><a href="#资源" class="headerlink" title="资源"></a>资源</h2><p><code>链接: https://pan.baidu.com/s/1RBHQPQ_VWfGtOgnCRlvqFQ</code></p><p><code>提取码: rjr4</code></p><h2 id="分享"><a href="#分享" class="headerlink" title="分享"></a>分享</h2><p>以后同样可以下载最新的Xcode 提取出对应的调试包,放置到旧款的Xcode即可</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="iOS" scheme="http://yoursite.com/categories/iOS/"/>
    
    
      <category term="Command" scheme="http://yoursite.com/tags/Command/"/>
    
      <category term="iOS" scheme="http://yoursite.com/tags/iOS/"/>
    
  </entry>
  
  <entry>
    <title>越狱开发(一)-准备</title>
    <link href="http://yoursite.com/2018/09/30/%E8%B6%8A%E7%8B%B1%E5%BC%80%E5%8F%91-%E4%B8%80-%E5%87%86%E5%A4%87/"/>
    <id>http://yoursite.com/2018/09/30/越狱开发-一-准备/</id>
    <published>2018-09-30T15:07:39.000Z</published>
    <updated>2018-09-30T15:09:33.222Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h2 id="什么是越狱-为什么越狱"><a href="#什么是越狱-为什么越狱" class="headerlink" title="什么是越狱,为什么越狱"></a>什么是越狱,为什么越狱</h2><p>越狱即获取到手机的root权限,能够自由的安装和修改App,学习底层的相关知识</p><h2 id="越狱的分类"><a href="#越狱的分类" class="headerlink" title="越狱的分类"></a>越狱的分类</h2><p>完美越狱和不完美越狱</p><p>不完美越狱 的不完美之处在于 不能关机! 关机之后需要重新越狱</p><p>完美越狱 只要不白苹果,不需要重新越狱</p><h2 id="越狱手机准备"><a href="#越狱手机准备" class="headerlink" title="越狱手机准备"></a>越狱手机准备</h2><p>越狱必须要有特定的设备,越狱是通过系统或者硬件的漏洞来获取超级权限,硬件的漏洞比较严重,硬件漏洞iOS更新到几都可以完美破解,目前就iPhone 3GS 是硬件漏洞</p><p>手机哪里买? 所有的二手手机商!</p><p>以上是废话,我实在360同城帮买的</p><p>如果需要筛选出自己的想要的iPhone(比如指定版本,指定手机类型,价格低于等,需要使用以下脚本) &lt;稍后补上&gt;</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="越狱"><a href="#越狱" class="headerlink" title="越狱"></a>越狱</h2><p>待补充</p><h2 id="Cydia介绍"><a href="#Cydia介绍" class="headerlink" title="Cydia介绍"></a>Cydia介绍</h2><p>待补充</p><h2 id="插件下载"><a href="#插件下载" class="headerlink" title="插件下载"></a>插件下载</h2><p>待补充</p><h2 id="系统备份-重要"><a href="#系统备份-重要" class="headerlink" title="系统备份(重要)"></a>系统备份(重要)</h2><p>待补充</p><h2 id="禁止更新"><a href="#禁止更新" class="headerlink" title="禁止更新"></a>禁止更新</h2><p>待补充</p><h2 id="小试身手"><a href="#小试身手" class="headerlink" title="小试身手"></a>小试身手</h2><p>要求: 将微信的Badge 设置为0</p><p>待补充</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="越狱" scheme="http://yoursite.com/categories/%E8%B6%8A%E7%8B%B1/"/>
    
    
      <category term="iOS" scheme="http://yoursite.com/tags/iOS/"/>
    
      <category term="越狱" scheme="http://yoursite.com/tags/%E8%B6%8A%E7%8B%B1/"/>
    
  </entry>
  
  <entry>
    <title>CSharp学习二</title>
    <link href="http://yoursite.com/2018/09/21/CSharp%E5%AD%A6%E4%B9%A0%E4%BA%8C/"/>
    <id>http://yoursite.com/2018/09/21/CSharp学习二/</id>
    <published>2018-09-21T06:24:26.000Z</published>
    <updated>2018-10-15T03:01:41.475Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="C#" scheme="http://yoursite.com/categories/C/"/>
    
    
      <category term="C#" scheme="http://yoursite.com/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>CSharp学习一</title>
    <link href="http://yoursite.com/2018/09/20/CSharp%E5%AD%A6%E4%B9%A0%E4%B8%80/"/>
    <id>http://yoursite.com/2018/09/20/CSharp学习一/</id>
    <published>2018-09-20T08:09:39.000Z</published>
    <updated>2018-10-15T03:01:53.963Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h2 id="安装Visual-Studio-Code"><a href="#安装Visual-Studio-Code" class="headerlink" title="安装Visual Studio Code"></a>安装Visual Studio Code</h2><p>优点: 轻量级</p><p>官网下载最新版本 <a href="https://code.visualstudio.com/" target="_blank" rel="noopener">https://code.visualstudio.com/</a></p><h2 id="Net-和-C"><a href="#Net-和-C" class="headerlink" title=".Net 和 C#"></a>.Net 和 <code>C#</code></h2><p>.Net 一是指 微软提供的一整套平台, 二是指具体的.net.framework 运行库</p><p>C# 是依赖于net.framework的语言</p><h2 id="Mac环境下-VS如何运行C"><a href="#Mac环境下-VS如何运行C" class="headerlink" title="Mac环境下 VS如何运行C#"></a>Mac环境下 VS如何运行<code>C#</code></h2><h3 id="下载库"><a href="#下载库" class="headerlink" title="下载库"></a>下载库</h3><p><a href="https://www.microsoft.com/net/learn/get-started-with-dotnet-tutorial#macos" target="_blank" rel="noopener">dot net core</a></p><p>安装运行.</p><p>按照步骤一步步来即可</p><h3 id="遇到的问题"><a href="#遇到的问题" class="headerlink" title="遇到的问题"></a>遇到的问题</h3><blockquote><p>运行下载下来的<code>pkg</code>文件报错,错误信息<code>com.apple.installer.pagecontroller 错误 -1</code></p></blockquote><p>包的签名有问题,<code>https://www.microsoft.com/net/learn/get-started-with-dotnet-tutorial#macos</code> Downloads 页面下载的包有问题</p><blockquote><p>提示删除,非法来源</p></blockquote><p><code>系统偏好设置</code>.<code>安全性与隐私</code>.<code>允许从以下位置下载的应用</code>  选择<code>任何来源</code></p><p>如果没有<code>任何来源</code> 字样 ,终端输入<br><code>sudo spctl --master-disable</code></p><h3 id="其他下载"><a href="#其他下载" class="headerlink" title="其他下载"></a>其他下载</h3><h4 id="直接下载二进制包"><a href="#直接下载二进制包" class="headerlink" title="直接下载二进制包"></a>直接下载二进制包</h4><blockquote><p>下载包</p></blockquote><p><a href="https://www.microsoft.com/net/download/thank-you/dotnet-sdk-2.1.402-macos-x64-binaries" target="_blank" rel="noopener">https://www.microsoft.com/net/download/thank-you/dotnet-sdk-2.1.402-macos-x64-binaries</a></p><blockquote><p>提取二进制文件以及依赖文件</p></blockquote><p>dotnet 以及依赖host文件夹拷贝到/usr/local/bin/下,并且修改权限</p><p><code>chmod 777 dotnet</code></p><h4 id="下载mono"><a href="#下载mono" class="headerlink" title="下载mono"></a>下载mono</h4><p>下载mono. mono 是.net跨平台的一套开源的微软.net全平台框架</p><p><a href="https://www.mono-project.com/download/stable/" target="_blank" rel="noopener">https://www.mono-project.com/download/stable/</a></p><h2 id="Hello-World"><a href="#Hello-World" class="headerlink" title="Hello World!"></a>Hello World!</h2><p>重启命令行</p><p><code>dotnet new console -o myApp &amp; cd myApp</code></p><p><code>dotnet run</code></p><h2 id="配置VC-Code"><a href="#配置VC-Code" class="headerlink" title="配置VC Code"></a>配置VC Code</h2><h3 id="终端控制台打印"><a href="#终端控制台打印" class="headerlink" title="终端控制台打印"></a>终端控制台打印</h3><p>我运行调试的时候,终端和控制台来回打开,并且输入是,终端和控制台都无法接收输入信息</p><p>点击调试按钮旁边的齿轮, 出现<code>launch.json</code></p><p>找到<code>console</code> 修改参数为 <code>integratedTerminal</code> 即可</p><h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><p>在mac上使用VS Code编写C#应用程序<a href="https://www.jianshu.com/p/d8f63e1aef08" target="_blank" rel="noopener">https://www.jianshu.com/p/d8f63e1aef08</a></p><p>在mac上运行 mono  <a href="https://blog.csdn.net/xzx_kag/article/details/78445894" target="_blank" rel="noopener">https://blog.csdn.net/xzx_kag/article/details/78445894</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="C#" scheme="http://yoursite.com/categories/C/"/>
    
    
      <category term="C#" scheme="http://yoursite.com/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>Hexo 开始写笔记</title>
    <link href="http://yoursite.com/2018/09/20/Hexo-%E5%BC%80%E5%A7%8B%E5%86%99%E7%AC%94%E8%AE%B0/"/>
    <id>http://yoursite.com/2018/09/20/Hexo-开始写笔记/</id>
    <published>2018-09-20T01:57:48.000Z</published>
    <updated>2018-11-20T07:16:32.624Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h2 id="如何本地存储图片"><a href="#如何本地存储图片" class="headerlink" title="如何本地存储图片"></a>如何本地存储图片</h2><p>我们写博客有时候需要很多图片,如果有可能可以选择网络图片,但是免费的网络图片随时可能失效(1年之后可能就失效了,文章就废了),自己的对象存储是按照流量收费,并且是后付费的(如果找到免费的,推荐)</p><p>我们选择本地存储图片试试!</p><p>在hexo目录下运行</p><p><code>npm install hexo-asset-image --save</code> 下载依赖</p><p>修改站点配置文件<code>_config.yml</code></p><p>修改如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># post 可以添加图片</span><br><span class="line">post_asset_folder: true</span><br></pre></td></tr></table></figure><p>对以前的文件添加同名目录,图片放在目录下即可方便引用</p><h2 id="首页隐藏一些文章"><a href="#首页隐藏一些文章" class="headerlink" title="首页隐藏一些文章"></a>首页隐藏一些文章</h2><p>我们有时候需要首页隐藏一些文章,但是又可以搜索的到,人真是矛盾的生物啊…</p><p>怎么做呢,我们替换一下首页生成的工具</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-generator-index2 --save</span><br><span class="line">$ npm uninstall hexo-generator-index --save</span><br></pre></td></tr></table></figure><p>找到 hexo 的配置文件<code>_config</code></p><p>配置<code>index_generator</code> 条目,修改如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># index2 generator是否包含官方的hexo-generator-index，默认true（包含）</span><br><span class="line">index2_include_index: true</span><br><span class="line">index2_generator:</span><br><span class="line">per_page: 8 # 每页展示文章数</span><br><span class="line">order_by: -date # 按发布时间排序</span><br><span class="line">exclude: # 产生首页时忽略的文章, tag 包含 hide 或者 category 为 hide 的文章</span><br><span class="line">- tag hide # 不包含标签为hide的文章</span><br><span class="line">- category hide # 不包含分类为hide的文章</span><br></pre></td></tr></table></figure><p>如果我想其他人完全看不到怎么办? </p><p>有两种办法,选其一: </p><ul><li>设置密码</li><li>将<code>_post</code>里需要隐藏的文章 移动到 <code>_draft</code>中. 重新生成部署即可.</li></ul><h2 id="如何添加音乐和视频"><a href="#如何添加音乐和视频" class="headerlink" title="如何添加音乐和视频"></a>如何添加音乐和视频</h2><p>这里分为两种,一种是没有背景音乐,但是某些文章配置音乐(推荐!)</p><p>还有一种是设置背景音乐,一打开博客就是音乐很吵哎,不推荐!</p><h3 id="添加背景音乐"><a href="#添加背景音乐" class="headerlink" title="添加背景音乐"></a>添加背景音乐</h3><p>直接在文章中添加下列代码, 到网易云音乐中找到喜欢的音乐,生成外链</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;iframe frameborder=&quot;no&quot; border=&quot;0&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; width=298 height=52 src=&quot;http://music.163.com/outchain/player?type=2&amp;id=32192436&amp;auto=1&amp;height=32&quot;&gt;&lt;/iframe&gt;</span><br></pre></td></tr></table></figure><p>到Next 主题目录 下的 layout 找到需要添加音乐的部分添加以上代码</p><p>比如要在侧边栏添加,修改 layout/_macro/sidebar.swig 文件,在适当的位置添加代码</p><p>注意: </p><p>width 或者 height 设置为0可以隐藏音乐的展示层,但是音乐依然播放.</p><h3 id="给某些文章添加背景音乐"><a href="#给某些文章添加背景音乐" class="headerlink" title="给某些文章添加背景音乐"></a>给某些文章添加背景音乐</h3><h4 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h4><p><code>npm install --save hexo-tag-aplayer</code></p><h4 id="修改hexo-配置文件-添加下列代码"><a href="#修改hexo-配置文件-添加下列代码" class="headerlink" title="修改hexo 配置文件,添加下列代码"></a>修改hexo 配置文件,添加下列代码</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">aplayer:</span><br><span class="line">  meting: true</span><br></pre></td></tr></table></figure><h4 id="获取音乐"><a href="#获取音乐" class="headerlink" title="获取音乐"></a>获取音乐</h4><p>meting 的简单书写格式为 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% meting &quot;id&quot; &quot;server&quot; &quot;type&quot; %&#125;</span><br></pre></td></tr></table></figure><p>例如 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% meting &quot;60198&quot; &quot;netease&quot; &quot;playlist&quot; %&#125;</span><br></pre></td></tr></table></figure>    <div id="aplayer-rqmNhgCJ" class="aplayer aplayer-tag-marker meting-tag-marker" data-id="509518010" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#ad7a86"></div><p>server支持的音乐平台有: netease, tencent, kugou, xiami, baidu,注意修改参数</p><p>歌曲的 id 和 type 必须对应,如果 id 是列表的 id, 那么 type 写上 <code>playlist</code> ,如果 id 是单曲, type 就是 <code>song</code></p><p>打开<a href="https://y.qq.com/" target="_blank" rel="noopener">QQ 音乐</a>,找到喜欢的歌单,找到分享,选择复制链接<code>https://y.qq.com/n/m/detail/taoge/index.html?id=5311096383</code>,里面会有 id <code>5311096383</code>, 替换到meting 中的 id,平台选择<code>tencent</code> , type 是 <code>playlist</code></p><h4 id="修改文章的-markdown"><a href="#修改文章的-markdown" class="headerlink" title="修改文章的 markdown"></a>修改文章的 markdown</h4><p>添加下列代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% meting &quot;5311096383&quot; &quot;netease&quot; &quot;playlist&quot; &quot;mini&quot; &quot;listfolded&quot; %&#125;</span><br></pre></td></tr></table></figure><p>说明 <code>mini</code> 是开启迷你模式, <code>listfolded</code> 是折叠列表</p><h4 id="只想添加本地音乐怎么办"><a href="#只想添加本地音乐怎么办" class="headerlink" title="只想添加本地音乐怎么办"></a>只想添加本地音乐怎么办</h4><p>使用标准的模式:</p><p><code><script>console.error("Error: [hexo-tag-aplayer] Specified asset file not found ([picture_url,)");</script></code></p><p>需要配合Hexo 的 <code>文章资源文件夹</code> 功能时,资源如 <code>caffeine.mp3</code> <code>picture.jpg</code> ,<code>caffeine.txt</code> 放到文章的同名目录内</p><p>在需要的文章中添加 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% aplayer &quot;Caffeine&quot; &quot;Jeff Williams&quot; &quot;caffeine.mp3&quot; &quot;picture.jpg&quot; &quot;lrc:caffeine.txt&quot; %&#125;</span><br></pre></td></tr></table></figure><h3 id="给文章添加视频"><a href="#给文章添加视频" class="headerlink" title="给文章添加视频"></a>给文章添加视频</h3><h4 id="安装插件-1"><a href="#安装插件-1" class="headerlink" title="安装插件"></a>安装插件</h4><p><code>npm install hexo-tag-dplayer --save</code></p><h4 id="找到视频"><a href="#找到视频" class="headerlink" title="找到视频"></a>找到视频</h4><p>这里只能是 <code>http://xxxx/xxx/xx.mp4</code></p><h4 id="书写格式"><a href="#书写格式" class="headerlink" title="书写格式"></a>书写格式</h4><div id="dplayer0" class="dplayer hexo-tag-dplayer-mark" style="margin-bottom: 20px;"></div><p>no url specified, no dplayer _(:3」∠)_</p><p>举例</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% dplayer &quot;url=https://moeplayer.b0.upaiyun.com/dplayer/hikarunara.mp4&quot; &quot;addition=https://dplayer.daoapp.io/bilibili?aid=4157142&quot; &quot;api=https://api.prprpr.me/dplayer/&quot; &quot;pic=https://moeplayer.b0.upaiyun.com/dplayer/hikarunara.jpg&quot; &quot;id=9E2E3368B56CDBB4&quot; &quot;loop=yes&quot; &quot;theme=#FADFA3&quot; &quot;autoplay=false&quot; &quot;token=tokendemo&quot; %&#125;</span><br></pre></td></tr></table></figure><h4 id="优酷-腾讯的视频如何引入"><a href="#优酷-腾讯的视频如何引入" class="headerlink" title="优酷,腾讯的视频如何引入"></a>优酷,腾讯的视频如何引入</h4><p>搜索视频,分享,找到关于 <code>iframe</code> 的代码,复制代码,拷贝到文章中,但是貌似不能放在最后</p><p>可以加上长宽</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;iframe frameborder=&quot;0&quot; src=&quot;https://v.qq.com/txp/iframe/player.html?vid=p0758s8f29d&quot; width=&quot;600&quot; height=&quot;500&quot; allowFullScreen=&quot;true&quot;&gt;&lt;/iframe&gt;</span><br></pre></td></tr></table></figure><h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><p><a href="https://github.com/MoePlayer/hexo-tag-aplayer" target="_blank" rel="noopener">https://github.com/MoePlayer/hexo-tag-aplayer</a></p><p><a href="https://github.com/MoePlayer/hexo-tag-dplayer" target="_blank" rel="noopener">https://github.com/MoePlayer/hexo-tag-dplayer</a></p><p><a href="https://github.com/CodeFalling/hexo-asset-image" target="_blank" rel="noopener">https://github.com/CodeFalling/hexo-asset-image</a></p><p><a href="http://blog.fiftykg.com/hexo/hexo%E9%A6%96%E9%A1%B5%E9%9A%90%E8%97%8F%E9%83%A8%E5%88%86%E6%96%87%E7%AB%A0.html" target="_blank" rel="noopener">http://blog.fiftykg.com/hexo/hexo%E9%A6%96%E9%A1%B5%E9%9A%90%E8%97%8F%E9%83%A8%E5%88%86%E6%96%87%E7%AB%A0.html</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="Hexo" scheme="http://yoursite.com/categories/Hexo/"/>
    
    
      <category term="Hexo" scheme="http://yoursite.com/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>Hexo实用工具</title>
    <link href="http://yoursite.com/2018/09/18/Hexo%E5%AE%9E%E7%94%A8%E5%B7%A5%E5%85%B7/"/>
    <id>http://yoursite.com/2018/09/18/Hexo实用工具/</id>
    <published>2018-09-18T14:53:56.000Z</published>
    <updated>2018-11-07T08:29:52.128Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h2 id="Cyberduck"><a href="#Cyberduck" class="headerlink" title="Cyberduck"></a>Cyberduck</h2><p>远程服务器连接工具</p><blockquote><p>优点:</p></blockquote><ul><li>文件目录形式,比命令行直观</li><li>远程连接快速,可以添加书签快速登录</li><li>可以使用sublime编辑文件,实时保存</li><li>可以同时连接命令行,作为图形化操作的补充</li><li>可以查看log</li></ul><h2 id="简单好用的markdown图床工具"><a href="#简单好用的markdown图床工具" class="headerlink" title="简单好用的markdown图床工具"></a>简单好用的markdown图床工具</h2><p><a href="https://www.jianshu.com/p/e46a91ae20b9" target="_blank" rel="noopener">https://www.jianshu.com/p/e46a91ae20b9</a></p><p>快速生成图片链接</p><p>所有云的对象存储也可以生成实现图片链接,但是有额度限制,超出收费</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="Hexo" scheme="http://yoursite.com/categories/Hexo/"/>
    
    
      <category term="Hexo" scheme="http://yoursite.com/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>Hexo NexT主题优化2</title>
    <link href="http://yoursite.com/2018/09/13/Hexo%20NexT%E4%B8%BB%E9%A2%98%E4%BC%98%E5%8C%962/"/>
    <id>http://yoursite.com/2018/09/13/Hexo NexT主题优化2/</id>
    <published>2018-09-13T08:30:32.000Z</published>
    <updated>2018-10-12T09:06:20.253Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h2 id="添加音乐"><a href="#添加音乐" class="headerlink" title="添加音乐"></a>添加音乐</h2><p>登录 <a href="https://music.163.com/" target="_blank" rel="noopener">网易云音乐</a>, 找到喜欢的音乐或者歌单,点击 <code>生成外链播放器</code>, 选择iframe 插件</p><p>选择 尺寸 , 播放模式, 复制html 代码,然后粘贴到你需要的文件中</p><p>比如我希望在侧栏的Links后面,所以粘贴到的位置是 <code>/hexo/themes/next/layout/_macro/sidebar.swig</code></p><p>找到如下代码,粘贴在后面</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% include &apos;../_custom/sidebar.swig&apos; %&#125;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">      &lt;/section&gt;</span><br></pre></td></tr></table></figure><h2 id="Hexo-添加封面"><a href="#Hexo-添加封面" class="headerlink" title="Hexo 添加封面"></a>Hexo 添加封面</h2><p>这里只讨论拥有服务器,和域名的情况</p><p>修改博客的域名解析为 blog.youdomain.com</p><p>在自己的服务器部署nginx,添加www的域名解析指向nginx,具体步骤可以看下面的网址</p><p><a href="https://cloud.tencent.com/developer/labs/lab/10068" target="_blank" rel="noopener">https://cloud.tencent.com/developer/labs/lab/10068</a></p><p>nginx 默认的地址是 <code>usr/share/ngin/html/</code></p><p>只需要修改<code>index.html</code>即可</p><p>里面的图片可以到<a href="http://fontawesome.dashgame.com/" target="_blank" rel="noopener">http://fontawesome.dashgame.com/</a>中查找,在前面加上<code>fa_</code>前缀即可</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;i class=&quot;fa fa-youtube-play vhm-item&quot;&gt;&lt;/i&gt;</span><br></pre></td></tr></table></figure><p>效果查看<a href="https://www.williamlovealisa.cn" target="_blank" rel="noopener">https://www.williamlovealisa.cn</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="Hexo" scheme="http://yoursite.com/categories/Hexo/"/>
    
    
      <category term="Hexo" scheme="http://yoursite.com/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>Hexo NexT主题优化</title>
    <link href="http://yoursite.com/2018/09/12/Hexo%20NexT%E4%B8%BB%E9%A2%98%E4%BC%98%E5%8C%96/"/>
    <id>http://yoursite.com/2018/09/12/Hexo NexT主题优化/</id>
    <published>2018-09-12T06:30:00.000Z</published>
    <updated>2018-09-30T08:25:21.909Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>NexT 文档写的很好,如果有兴趣可以<a href="http://theme-next.iissnan.com/getting-started.html" target="_blank" rel="noopener">看看</a></p><p>本文的站点配置目录为 <code>/hexo/_config.yml</code></p><p>主题配置目录为  <code>/hexo/themes/next/_comfig.yml</code></p><h2 id="首先安装主题"><a href="#首先安装主题" class="headerlink" title="首先安装主题"></a>首先安装主题</h2><h3 id="安装主题"><a href="#安装主题" class="headerlink" title="安装主题"></a>安装主题</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ cd your-hexo-site</span><br><span class="line">$ git clone https://github.com/iissnan/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure><h3 id="启用主题"><a href="#启用主题" class="headerlink" title="启用主题"></a>启用主题</h3><p>与所有 Hexo 主题启用的模式一样。 当 克隆/下载 完成后，打开 站点配置文件， 找到 theme 字段，并将其值更改为 next。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">theme: next</span><br></pre></td></tr></table></figure><p>到此，NexT 主题安装完成。下一步我们将验证主题是否正确启用。在切换主题之后、验证之前， 我们最好使用 hexo clean 来清除 Hexo 的缓存。</p><h3 id="验证主题"><a href="#验证主题" class="headerlink" title="验证主题"></a>验证主题</h3><p>启动本地站点<code>hexo s</code>, 访问<code>http://0.0.0.0:4000/</code></p><h3 id="切换主题的风格"><a href="#切换主题的风格" class="headerlink" title="切换主题的风格"></a>切换主题的风格</h3><p>NexT 提供了三种风格方案(Scheme)</p><ul><li>Muse - 默认 Scheme，这是 NexT 最初的版本，黑白主调，大量留白</li><li>Mist - Muse 的紧凑版本，整洁有序的单栏外观</li><li>Pisces - 双栏 Scheme，小家碧玉似的清新</li></ul><p>修改/themes/next/_config.yml文件中的Scheme, 选择需要的样式去掉<code>#</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#scheme: Muse</span><br><span class="line">scheme: Mist</span><br><span class="line">#scheme: Pisces</span><br></pre></td></tr></table></figure><h2 id="基本设置"><a href="#基本设置" class="headerlink" title="基本设置"></a>基本设置</h2><h3 id="设置语言"><a href="#设置语言" class="headerlink" title="设置语言"></a>设置语言</h3><p>到<code>站点配置文件</code>,即hexo/_config.yml文件修改</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">language: zh-Hans # 简体中文</span><br></pre></td></tr></table></figure><p>修改中文名</p><p>到<code>themes/next/languages/zh-Hans.yml</code> 修改对应的中文</p><h3 id="侧栏"><a href="#侧栏" class="headerlink" title="侧栏"></a>侧栏</h3><blockquote><p>设置侧栏的位置</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sidebar:</span><br><span class="line">  position: left # 左侧显示  right</span><br></pre></td></tr></table></figure><blockquote><p>显示侧栏显示的时机，修改 sidebar.display 的值</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sidebar:</span><br><span class="line"># always 在所有页面展示</span><br><span class="line"># hide 在所有页面隐藏</span><br><span class="line"># remove 完全消失</span><br><span class="line">  display: post # 在文章页面展示</span><br></pre></td></tr></table></figure><h3 id="头像"><a href="#头像" class="headerlink" title="头像"></a>头像</h3><p>修改<code>theme/next/_config.yml</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 完整URI</span><br><span class="line">avatar: http://example.com/avatar.png</span><br><span class="line"></span><br><span class="line"># 放到theme/next/source/images下</span><br><span class="line"></span><br><span class="line">avatar: /images/avatar.png</span><br><span class="line"></span><br><span class="line"># 放到theme/next/source/images下</span><br></pre></td></tr></table></figure><h3 id="作者昵称"><a href="#作者昵称" class="headerlink" title="作者昵称"></a>作者昵称</h3><p>修改外层 <code>_config.yml</code>, 将 <code>author</code> 修改为你的昵称</p><h3 id="站点描述"><a href="#站点描述" class="headerlink" title="站点描述"></a>站点描述</h3><p>修改外层 <code>_config.yml</code>, 将 <code>description</code> 修改为你喜欢的签名</p><h3 id="关于图标"><a href="#关于图标" class="headerlink" title="关于图标"></a>关于图标</h3><p>所有图标的来源<br><a href="https://fontawesome.com/" target="_blank" rel="noopener">https://fontawesome.com/</a></p><p>用法来源:<br><a href="http://fontawesome.dashgame.com/" target="_blank" rel="noopener">http://fontawesome.dashgame.com/</a></p><p>具体地址在<code>themes/next/source/lib/font-awesome/</code> 下</p><h3 id="导航栏标题和图片"><a href="#导航栏标题和图片" class="headerlink" title="导航栏标题和图片"></a>导航栏标题和图片</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"># 导航栏条目,如果有新的条目要新增,在这里添加, || 后面是图标,图标参考上面的&lt;关于图标&gt;</span><br><span class="line">menu:</span><br><span class="line">  home: / || home # 前面地址,后面是图标</span><br><span class="line">  tags: /tags/ || tags</span><br><span class="line">  categories: /categories/ || th</span><br><span class="line">  archives: /archives/ || archive</span><br><span class="line">  about: /about/ || user</span><br><span class="line">  #schedule: /schedule/ || calendar</span><br><span class="line">  #sitemap: /sitemap.xml || sitemap</span><br><span class="line">  #commonweal: /404/ || heartbeat</span><br><span class="line"></span><br><span class="line"># Enable/Disable menu icons.</span><br><span class="line">menu_icons:</span><br><span class="line">  enable: true</span><br></pre></td></tr></table></figure><p>然后新建tags, categories 以及about 页面</p><p>命令行分别输入下面三行,生成三个页面</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new page tags</span><br><span class="line">$ hexo new page categories</span><br><span class="line">$ hexo new page about</span><br></pre></td></tr></table></figure><p>tags、categories页面需要设置类型</p><p>修改<code>/hexo/source/tags/index.md</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: Tags</span><br><span class="line">date: 2017-09-07 17:17:32</span><br><span class="line">type: &quot;tags&quot;</span><br><span class="line">comments: false</span><br><span class="line"></span><br><span class="line">---</span><br></pre></td></tr></table></figure><p>修改<code>/hexo/source/categories/index.md</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: categories</span><br><span class="line">date: 2017-09-07 17:17:48</span><br><span class="line">type: &quot;categories&quot;</span><br><span class="line">comments: false</span><br><span class="line"></span><br><span class="line">---</span><br></pre></td></tr></table></figure><p>about页面自己设置自我介绍,可以是个人简历等,自行编写markdown</p><h3 id="公益404"><a href="#公益404" class="headerlink" title="公益404"></a>公益404</h3><p>404 时帮助寻找失散的儿童,效果如下<a href="https://blog.williamlovealisa.cn/2018/09/12/Hex" target="_blank" rel="noopener">https://blog.williamlovealisa.cn/2018/09/12/Hex</a></p><p>使用方法，新建 404.html 页面，放到主题的 source 目录下，内容如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE HTML&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">  &lt;meta http-equiv=&quot;content-type&quot; content=&quot;text/html;charset=utf-8;&quot;/&gt;</span><br><span class="line">  &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge,chrome=1&quot; /&gt;</span><br><span class="line">  &lt;meta name=&quot;robots&quot; content=&quot;all&quot; /&gt;</span><br><span class="line">  &lt;meta name=&quot;robots&quot; content=&quot;index,follow&quot;/&gt;</span><br><span class="line">  &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;https://qzone.qq.com/gy/404/style/404style.css&quot;&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">  &lt;script type=&quot;text/plain&quot; src=&quot;http://www.qq.com/404/search_children.js&quot;</span><br><span class="line">          charset=&quot;utf-8&quot; homePageUrl=&quot;/&quot;</span><br><span class="line">          homePageName=&quot;回到我的主页&quot;&gt;</span><br><span class="line">  &lt;/script&gt;</span><br><span class="line">  &lt;script src=&quot;https://qzone.qq.com/gy/404/data.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;</span><br><span class="line">  &lt;script src=&quot;https://qzone.qq.com/gy/404/page.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h3 id="集成RSS"><a href="#集成RSS" class="headerlink" title="集成RSS"></a>集成RSS</h3><h4 id="RSS是什么"><a href="#RSS是什么" class="headerlink" title="RSS是什么?"></a>RSS是什么?</h4><p>RSS是站点用来和其他站点之间共享内容的一种简易方式,他剔除掉无用内容,将有用的内容聚合成XML,便于分享</p><h4 id="怎么做"><a href="#怎么做" class="headerlink" title="怎么做?"></a>怎么做?</h4><p>首先安装依赖包,命令行输入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-generator-feed --save</span><br></pre></td></tr></table></figure><p>修改站点配置文件<code>_config.yml</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">feed: # RSS订阅插件</span><br><span class="line">  type: atom</span><br><span class="line">  path: atom.xml</span><br><span class="line">  limit: 0</span><br><span class="line"></span><br><span class="line">plugins: hexo-generate-feed</span><br></pre></td></tr></table></figure><p>修改主题配置文件_config.yml</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rss: /atom.xml</span><br></pre></td></tr></table></figure><p>在Hexo根目录重新运行, </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo g -d</span><br></pre></td></tr></table></figure><h3 id="首页不显示全文"><a href="#首页不显示全文" class="headerlink" title="首页不显示全文"></a>首页不显示全文</h3><h4 id="有必要么"><a href="#有必要么" class="headerlink" title="有必要么"></a>有必要么</h4><p>非常有必要,除非你想所有的文本都展示到首页,那么首页将非常臃肿,内容太多,首页内容只需要简介即可</p><h4 id="怎么做-1"><a href="#怎么做-1" class="headerlink" title="怎么做?"></a>怎么做?</h4><p>修改<code>主题配置目录</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#  首页仅仅显示缩略内容,限制150个字符</span><br><span class="line">auto_excerpt:</span><br><span class="line">  enable: true</span><br><span class="line">  length: 150</span><br></pre></td></tr></table></figure><h3 id="首页本篇文章分块阴影"><a href="#首页本篇文章分块阴影" class="headerlink" title="首页本篇文章分块阴影"></a>首页本篇文章分块阴影</h3><p>打开 <code>\themes\next\source\css\_custom\custom.styl</code></p><p>添加内容</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">// 主页文章添加阴影效果</span><br><span class="line"> .post &#123;</span><br><span class="line">   margin-top: 60px;</span><br><span class="line">   margin-bottom: 60px;</span><br><span class="line">   padding: 25px;</span><br><span class="line">   -webkit-box-shadow: 0 0 5px rgba(202, 203, 203, .5);</span><br><span class="line">   -moz-box-shadow: 0 0 5px rgba(202, 203, 204, .5);</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>博客底部内容修改</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"># 博客底部显示内容</span><br><span class="line">footer:</span><br><span class="line">  # Specify the date when the site was setup.</span><br><span class="line">  # If not defined, current year will be used.</span><br><span class="line">  # 创建该博客的时间,可以随意指定</span><br><span class="line">  since: 2018</span><br><span class="line"></span><br><span class="line">  # Icon between year and copyright info.</span><br><span class="line">  # 博客版权信息之间的图标,这个是 ❉ 的图标</span><br><span class="line">  icon: snowflake-o</span><br><span class="line"></span><br><span class="line">  # If not defined, will be used `author` from Hexo main config.</span><br><span class="line">  # 版权,默认是博客的作者</span><br><span class="line">  copyright: </span><br><span class="line">  # ---------</span><br><span class="line">  # Hexo link (Powered by Hexo).</span><br><span class="line">  # 显示Hexo强力驱动的信息,用了人家东西还是要讲点道德的...</span><br><span class="line">  powered: true</span><br><span class="line"></span><br><span class="line">  # 显示主题,主题的显示样式, 以及主题的版本号</span><br><span class="line">  theme:</span><br><span class="line">    # Theme &amp; scheme info link (Theme - NexT.scheme).</span><br><span class="line">    enable: true</span><br><span class="line">    # Version info of NexT after scheme info (vX.X.X).</span><br><span class="line">    version: true</span><br></pre></td></tr></table></figure><h3 id="添加本地搜索功能"><a href="#添加本地搜索功能" class="headerlink" title="添加本地搜索功能"></a>添加本地搜索功能</h3><p>在hexo 根目录,安装本地搜索</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-generator-searchdb --save</span><br></pre></td></tr></table></figure><p>在<code>站点配置文件</code> 修改如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#站内搜索</span><br><span class="line">search:  </span><br><span class="line">    path: search.xml</span><br><span class="line">    field: post # 只搜索post类型的文件</span><br><span class="line">    format: html</span><br><span class="line">    limit: 10000 # 最多10000条</span><br></pre></td></tr></table></figure><p>在<code>主题配置文件</code> 修改如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"># Local search</span><br><span class="line"># Dependencies: https://github.com/flashlab/hexo-generator-search</span><br><span class="line"># 本地搜索</span><br><span class="line">local_search:</span><br><span class="line">  enable: true</span><br><span class="line">  # if auto, trigger search by changing input</span><br><span class="line">  # if manual, trigger search by pressing enter key or search button</span><br><span class="line">  trigger: auto</span><br><span class="line">  # show top n results per article, show all results by setting to -1</span><br><span class="line">  top_n_per_article: 1</span><br></pre></td></tr></table></figure><h3 id="添加侧边栏的社交链接"><a href="#添加侧边栏的社交链接" class="headerlink" title="添加侧边栏的社交链接"></a>添加侧边栏的社交链接</h3><p>修改<code>主题配置目录</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"># 这里都是自己不同平台的账号</span><br><span class="line">social: # 我的博客地址链接</span><br><span class="line">  GitHub: https://github.com/JXwilliamJi || github</span><br><span class="line">  Coding: https://coding.net/u/Fastlane  || random</span><br><span class="line">  简书: https://www.jianshu.com/u/a2e80deb11a1 || book</span><br><span class="line">  CSDN: https://blog.csdn.net/qq_31092987 || rotate-right</span><br><span class="line">  #Google: https://plus.google.com/yourname || google</span><br><span class="line">  #Twitter: https://twitter.com/yourname || twitter</span><br><span class="line">  #FB Page: https://www.facebook.com/yourname || facebook</span><br><span class="line">  #VK Group: https://vk.com/yourname || vk</span><br><span class="line">  StackOverflow: https://stackoverflow.com/users/8341797/william-ji || stack-overflow</span><br><span class="line">  Segmentfault: https://segmentfault.com/u/feiyuqingcheng || facebook</span><br><span class="line">  E-Mail: mailto:jxjmdx2009@163.com || envelope</span><br><span class="line">  #YouTube: https://youtube.com/yourname || youtube</span><br><span class="line">  #Instagram: https://instagram.com/yourname || instagram</span><br><span class="line">  # Skype: mailto://yourname?call|chat || skype</span><br><span class="line"></span><br><span class="line">social_icons:</span><br><span class="line">  enable: true</span><br><span class="line">  icons_only: false</span><br><span class="line">  transition: false</span><br></pre></td></tr></table></figure><h3 id="修改侧边栏友情链接"><a href="#修改侧边栏友情链接" class="headerlink" title="修改侧边栏友情链接"></a>修改侧边栏友情链接</h3><p>修改 <code>主题配置目录</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"># Blog rolls 博客其他资料,其他人的链接</span><br><span class="line">links_icon: link # 图标</span><br><span class="line">links_title: Links # 标题名字</span><br><span class="line">#links_layout: block</span><br><span class="line">links_layout: inline # 行内样式</span><br><span class="line">links: </span><br><span class="line">  # 具体链接,格式如下</span><br><span class="line">  #Title: http://example.com/</span><br><span class="line">  iOS免费书籍资料: https://github.com/justjavac/free-programming-books-zh_CN</span><br><span class="line">  创造狮导航: http://www.chuangzaoshi.com/code</span><br><span class="line">  前端导航: http://www.alloyteam.com/nav/</span><br><span class="line">  掘金酱: http://e.xitu.io/</span><br><span class="line">  Arduino: https://www.arduino.cn/</span><br><span class="line">  树莓派: https://www.raspberrypi.org/</span><br><span class="line">  MacApp免费下载:  https://www.waitsun.com/</span><br><span class="line">  MacApp会员制下载: http://www.ifunmac.com/</span><br></pre></td></tr></table></figure><h3 id="微信支付宝打赏功能"><a href="#微信支付宝打赏功能" class="headerlink" title="微信支付宝打赏功能"></a>微信支付宝打赏功能</h3><p>从微信/支付宝获取自己的二维码截图,编辑成合适大小,周边不留白</p><p>将图片放置到next主题下的source/images/ 下</p><p>修改 <code>主题配置文件</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># Reward 打赏功能</span><br><span class="line">reward_comment: 坚持原创技术分享，您的支持将鼓励我继续创作！</span><br><span class="line">wechatpay: /images/Weichat.png</span><br><span class="line">alipay: /images/AliPay.png</span><br></pre></td></tr></table></figure><p>打赏功能修改,取消不停的抖动,改为抖动3次</p><p>打开 <code>themes/next/source/css/_common/components/post/post-reward.styl</code></p><p>修改微信支付宝的样式如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">#wechat:hover p&#123;</span><br><span class="line">    animation: roll 0.1s 3 linear;</span><br><span class="line">    -webkit-animation: roll 0.1s 3 linear;</span><br><span class="line">    -moz-animation: roll 0.1s 3 linear;</span><br><span class="line">&#125;</span><br><span class="line">#alipay:hover p&#123;</span><br><span class="line">    animation: roll 0.1s 3 linear;</span><br><span class="line">    -webkit-animation: roll 0.1s 3 linear;</span><br><span class="line">    -moz-animation: roll 0.1s 3 linear;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="第三方配置加速服务"><a href="#第三方配置加速服务" class="headerlink" title="第三方配置加速服务"></a>第三方配置加速服务</h3><p>修改<code>主题配置目录</code> 的 <code>vendors</code> 属性</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"># Script Vendors.</span><br><span class="line"># Set a CDN address for the vendor you want to customize.</span><br><span class="line"># For example</span><br><span class="line">#    mquery: https://ajax.googleapis.com/ajax/libs/jquery/2.2.0/jquery.min.js</span><br><span class="line"># Be aware that you should use the same version as internal ones to avoid potential problems.</span><br><span class="line"># Please use the https protocol of CDN files when you enable https on your site.</span><br><span class="line">vendors:</span><br><span class="line">  # Internal path prefix. Please do not edit it.</span><br><span class="line">  _internal: lib</span><br><span class="line"></span><br><span class="line">  # Internal version: 2.1.3</span><br><span class="line">  jquery: //cdn.jsdelivr.net/jquery/2.1.3/jquery.min.js</span><br><span class="line"></span><br><span class="line">  # Internal version: 2.1.5</span><br><span class="line">  # See: http://fancyapps.com/fancybox/</span><br><span class="line">  fancybox: //cdn.jsdelivr.net/fancybox/2.1.5/jquery.fancybox.pack.js</span><br><span class="line">  fancybox_css: //cdn.jsdelivr.net/fancybox/2.1.5/jquery.fancybox.min.css</span><br><span class="line"></span><br><span class="line">  # Internal version: 1.0.6</span><br><span class="line">  # See: https://github.com/ftlabs/fastclick</span><br><span class="line">  fastclick: //cdn.jsdelivr.net/fastclick/1.0.6/fastclick.min.js</span><br><span class="line"></span><br><span class="line">  # Internal version: 1.9.7</span><br><span class="line">  # See: https://github.com/tuupola/jquery_lazyload</span><br><span class="line">  lazyload: //cdn.jsdelivr.net/jquery.lazyload/1.9.3/jquery.lazyload.min.js</span><br><span class="line"></span><br><span class="line">  # Internal version: 1.2.1</span><br><span class="line">  # See: http://VelocityJS.org</span><br><span class="line">  velocity: //cdn.jsdelivr.net/velocity/1.2.3/velocity.min.js</span><br><span class="line"></span><br><span class="line">  # Internal version: 1.2.1</span><br><span class="line">  # See: http://VelocityJS.org</span><br><span class="line">  velocity_ui: //cdn.jsdelivr.net/velocity/1.2.3/velocity.ui.min.js</span><br><span class="line"></span><br><span class="line">  # Internal version: 0.7.9</span><br><span class="line">  # See: https://faisalman.github.io/ua-parser-js/</span><br><span class="line">  ua_parser: //cdn.jsdelivr.net/ua-parser.js/0.7.10/ua-parser.min.js</span><br><span class="line"></span><br><span class="line">  # Internal version: 4.6.2</span><br><span class="line">  # See: http://fontawesome.io/</span><br><span class="line">  fontawesome: //maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css</span><br><span class="line"></span><br><span class="line">  # Internal version: 1</span><br><span class="line">  # https://www.algolia.com</span><br><span class="line">  algolia_instant_js:</span><br><span class="line">  algolia_instant_css:</span><br><span class="line"></span><br><span class="line">  # Internal version: 1.0.2</span><br><span class="line">  # See: https://github.com/HubSpot/pace</span><br><span class="line">  # Or use direct links below:</span><br><span class="line">  # pace: //cdn.bootcss.com/pace/1.0.2/pace.min.js</span><br><span class="line">  # pace_css: //cdn.bootcss.com/pace/1.0.2/themes/blue/pace-theme-flash.min.css</span><br><span class="line">  pace: //cdn.bootcss.com/pace/1.0.2/pace.min.js</span><br><span class="line">  pace_css: //cdn.bootcss.com/pace/1.0.2/themes/blue/pace-theme-flash.min.css</span><br><span class="line"></span><br><span class="line">  # Internal version: 1.0.0</span><br><span class="line">  # https://github.com/hustcc/canvas-nest.js</span><br><span class="line">  canvas_nest: //cdn.bootcss.com/canvas-nest.js/1.0.1/canvas-nest.min.js</span><br></pre></td></tr></table></figure><h3 id="访客统计和文章阅读量"><a href="#访客统计和文章阅读量" class="headerlink" title="访客统计和文章阅读量"></a>访客统计和文章阅读量</h3><h4 id="不蒜子统计"><a href="#不蒜子统计" class="headerlink" title="不蒜子统计"></a>不蒜子统计</h4><p>修改 <code>主题配置目录</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"># Show PV/UV of the website/page with busuanzi.</span><br><span class="line"># Get more information on http://ibruce.info/2015/04/04/busuanzi/</span><br><span class="line"># 显示每个文章的访问人数 ,卜算子</span><br><span class="line">busuanzi_count:</span><br><span class="line">  # count values only if the other configs are false</span><br><span class="line">  enable: true</span><br><span class="line">  # custom uv span for the whole site</span><br><span class="line">  # 效果：本站访客数12345人次</span><br><span class="line">  site_uv: true</span><br><span class="line">  site_uv_header: 本站访客数</span><br><span class="line">  site_uv_footer: 人次</span><br><span class="line"></span><br><span class="line">  # 效果：本文总阅读量12345次</span><br><span class="line">  # custom pv span for the whole site</span><br><span class="line">  site_pv: false</span><br><span class="line">  site_pv_header: &lt;i class=&quot;fa fa-eye&quot;&gt;&lt;/i&gt;</span><br><span class="line">  site_pv_footer: 人次</span><br><span class="line">  # custom pv span for one page only</span><br><span class="line">  page_pv: true</span><br><span class="line">  page_pv_header: 本文总阅读量</span><br><span class="line">  page_pv_footer:</span><br></pre></td></tr></table></figure><h4 id="LeanCloud"><a href="#LeanCloud" class="headerlink" title="LeanCloud"></a>LeanCloud</h4><p>统计数据比较靠谱,待续</p><h3 id="文章字数统计"><a href="#文章字数统计" class="headerlink" title="文章字数统计"></a>文章字数统计</h3><p>修改<code>主题配置目录</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># Post wordcount display settings</span><br><span class="line"># Dependencies: https://github.com/willin/hexo-wordcount</span><br><span class="line"># 字符统计功能</span><br><span class="line">post_wordcount:</span><br><span class="line">  item_text: true</span><br><span class="line">  wordcount: true</span><br><span class="line">  min2read: true</span><br><span class="line">  totalcount: false</span><br><span class="line">  separated_meta: true</span><br></pre></td></tr></table></figure><p>修改 <code>\themes\next\layout\_macro\post.swig</code></p><p>找到 <code>&lt;span class=&quot;leancloud-visitors-count&quot;&gt;&lt;/span&gt;</code></p><p>添加内容,最终代码如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;% endif %&#125;</span><br><span class="line">&lt;span class=&quot;leancloud-visitors-count&quot;&gt;&lt;/span&gt;</span><br><span class="line">&lt;/span&gt;</span><br><span class="line"></span><br><span class="line">&lt;span class=&quot;post-meta-divider&quot;&gt;|&lt;span&gt;</span><br></pre></td></tr></table></figure><p>如果同时要在文章底部统计全站字数</p><p>修改 <code>/themes/next/layout/_partials/footer.swig</code></p><p>找到 <code>post-meta-divider</code> 后面添加内容,最终代码如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;span class=&quot;post-meta-divider&quot;&gt;|&lt;/span&gt;</span><br><span class="line">&lt;div class=&quot;theme-info&quot;&gt;</span><br><span class="line">  &lt;span class=&quot;post-count&quot;&gt;Total Words:&#123;&#123; totalcount(site) &#125;&#125;&lt;/span&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line"></span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure><blockquote><p>直接修改不会展示</p></blockquote><p>需要安装下包</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ yarn add hexo-wordcount</span><br></pre></td></tr></table></figure><p>OR</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm i --save hexo-wordcount</span><br></pre></td></tr></table></figure><h3 id="添加评论"><a href="#添加评论" class="headerlink" title="添加评论"></a>添加评论</h3><h4 id="新增评论模块"><a href="#新增评论模块" class="headerlink" title="新增评论模块"></a>新增评论模块</h4><p>综合比较,不需要用户登录的只有<code>leancloud</code></p><p><a href="https://valine.js.org/hexo.html" target="_blank" rel="noopener">https://valine.js.org/hexo.html</a> 基于 <code>leancloud</code>,已经集成进来了</p><p>修改 <code>主题配置文件</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">valine:</span><br><span class="line">  enable: true</span><br><span class="line">  appid:  tHQNEE9Bi6ywV3plQQE5XVEg-gzGzoHsz</span><br><span class="line">  appkey:  WEMokMM90vN6Jpw7R1r2tqNz</span><br><span class="line">  notify: false # mail notifier , https://github.com/xCss/Valine/wiki</span><br><span class="line">  verify: true # 是否有验证码校验</span><br><span class="line">  placeholder: ヾﾉ≧∀≦)o 来呀！快活呀！~  # 默认文字</span><br><span class="line">  avatar: mm # gravatar style # 默认头像</span><br><span class="line">  guest_info: nick,mail,link # custom comment header</span><br><span class="line">  pageSize: 10 # pagination size</span><br></pre></td></tr></table></figure><h4 id="选择性关闭评论"><a href="#选择性关闭评论" class="headerlink" title="选择性关闭评论"></a>选择性关闭评论</h4><p>在 <code>title</code> 和 <code>tag</code>的同级目录添加如下,关系评论</p><p><code>comments: false</code></p><p>更优的做法是: </p><p>在<code>scaffolds/post.md</code> 以及 <code>scaffolds/draft.md</code> 文件下新增</p><p><code>comments: true</code>,默认新增的post和draft都是支持评论的,且都有comments属性</p><h3 id="站点顶部的加载条"><a href="#站点顶部的加载条" class="headerlink" title="站点顶部的加载条"></a>站点顶部的加载条</h3><p>在 <code>主题配置目录</code> 搜索 <code>pace</code>,修改如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"># Progress bar in the top during page loading.</span><br><span class="line"># 加载条,各种样式可选</span><br><span class="line">pace: true</span><br><span class="line"># Themes list:</span><br><span class="line">#pace-theme-big-counter</span><br><span class="line">#pace-theme-bounce</span><br><span class="line">#pace-theme-barber-shop</span><br><span class="line">#pace-theme-center-atom</span><br><span class="line">#pace-theme-center-circle</span><br><span class="line">#pace-theme-center-radar</span><br><span class="line">#pace-theme-center-simple</span><br><span class="line">#pace-theme-corner-indicator</span><br><span class="line">#pace-theme-fill-left</span><br><span class="line">#pace-theme-flash</span><br><span class="line">#pace-theme-loading-bar</span><br><span class="line">#pace-theme-mac-osx # 模仿mac</span><br><span class="line">#pace-theme-minimal # 加载的是一条细线</span><br><span class="line"># For example</span><br><span class="line"># pace_theme: pace-theme-center-simple</span><br><span class="line">pace_theme: pace-theme-minimal</span><br></pre></td></tr></table></figure><h3 id="修改文章链接的样式"><a href="#修改文章链接的样式" class="headerlink" title="修改文章链接的样式"></a>修改文章链接的样式</h3><p>修改<code>themes\next\source\css\_common\components\post\post.styl</code> ,在文章末尾添加CSS 样式如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">// 文章内链接文本样式</span><br><span class="line">.post-body p a&#123;</span><br><span class="line">  color: #0593d3;</span><br><span class="line">  border-bottom: none;</span><br><span class="line">  border-bottom: 1px solid #0593d3;</span><br><span class="line">  &amp;:hover &#123;</span><br><span class="line">    color: #fc6423;</span><br><span class="line">    border-bottom: none;</span><br><span class="line">    border-bottom: 1px solid #fc6423;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="修改文章底部的标签样式"><a href="#修改文章底部的标签样式" class="headerlink" title="修改文章底部的标签样式"></a>修改文章底部的标签样式</h3><p>修改 <code>/themes/next/layout/_macro/post.swig</code></p><p>找到<code>rel=&quot;tag&quot;&gt;#</code> 修改为<code>rel=&quot;tag&quot;&gt;&lt;i class=&quot;fa fa-tag&quot;&gt;&lt;/i&gt;</code></p><h3 id="文章底部添加结束标记"><a href="#文章底部添加结束标记" class="headerlink" title="文章底部添加结束标记"></a>文章底部添加结束标记</h3><p>在每一篇文章底部添加 <code>-------------本文结束-------------</code>文本</p><p>在 <code>/themes/next/layout/_macro/</code> 下新建 <code>passage-end-tag.swig</code>,新增内容</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;div&gt;</span><br><span class="line">    &#123;% if not is_index %&#125;</span><br><span class="line">        &lt;div style=&quot;text-align:center;color: #555;font-size:14px;&quot;&gt;-------------本文结束-------------&lt;/div&gt;</span><br><span class="line">    &#123;% endif %&#125;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><p>打开 <code>\themes\next\layout\_macro\post.swig</code></p><p>搜索 <code>END POST BODY</code>,修改如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&#123;#####################&#125;</span><br><span class="line">   &#123;### END POST BODY ###&#125;</span><br><span class="line">   &#123;#####################&#125;</span><br><span class="line">   </span><br><span class="line">&lt;div&gt;</span><br><span class="line"> &#123;% if not is_index %&#125;</span><br><span class="line">   &#123;% include &apos;passage-end-tag.swig&apos; %&#125;</span><br><span class="line"> &#123;% endif %&#125;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><p>最后在<code>主题配置文件</code>末尾添加</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># 文章末尾添加“本文结束”标记</span><br><span class="line">passage_end_tag:</span><br><span class="line">  enabled: true</span><br></pre></td></tr></table></figure><h3 id="版权信息"><a href="#版权信息" class="headerlink" title="版权信息"></a>版权信息</h3><h4 id="每篇文章底部的版权信息"><a href="#每篇文章底部的版权信息" class="headerlink" title="每篇文章底部的版权信息"></a>每篇文章底部的版权信息</h4><p>在 <code>themes/next/layout/_macro/</code>下添加 <code>my-copyright.swig</code>,新增内容</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">&#123;% if page.copyright %&#125;</span><br><span class="line">&lt;div class=&quot;my_post_copyright&quot;&gt;</span><br><span class="line">  &lt;script src=&quot;//cdn.bootcss.com/clipboard.js/1.5.10/clipboard.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">  </span><br><span class="line">  &lt;!-- JS库 sweetalert 可修改路径 --&gt;</span><br><span class="line">  &lt;script src=&quot;https://cdn.bootcss.com/jquery/2.0.0/jquery.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">  &lt;script src=&quot;https://unpkg.com/sweetalert/dist/sweetalert.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">  &lt;p&gt;&lt;span&gt;本文标题:&lt;/span&gt;&lt;a href=&quot;&#123;&#123; url_for(page.path) &#125;&#125;&quot;&gt;&#123;&#123; page.title &#125;&#125;&lt;/a&gt;&lt;/p&gt;</span><br><span class="line">  &lt;p&gt;&lt;span&gt;文章作者:&lt;/span&gt;&lt;a href=&quot;/&quot; title=&quot;访问 &#123;&#123; theme.author &#125;&#125; 的个人博客&quot;&gt;&#123;&#123; theme.author &#125;&#125;&lt;/a&gt;&lt;/p&gt;</span><br><span class="line">  &lt;p&gt;&lt;span&gt;发布时间:&lt;/span&gt;&#123;&#123; page.date.format(&quot;YYYY年MM月DD日 - HH:MM&quot;) &#125;&#125;&lt;/p&gt;</span><br><span class="line">  &lt;p&gt;&lt;span&gt;最后更新:&lt;/span&gt;&#123;&#123; page.updated.format(&quot;YYYY年MM月DD日 - HH:MM&quot;) &#125;&#125;&lt;/p&gt;</span><br><span class="line">  &lt;p&gt;&lt;span&gt;原始链接:&lt;/span&gt;&lt;a href=&quot;&#123;&#123; url_for(page.path) &#125;&#125;&quot; title=&quot;&#123;&#123; page.title &#125;&#125;&quot;&gt;&#123;&#123; page.permalink &#125;&#125;&lt;/a&gt;</span><br><span class="line">    &lt;span class=&quot;copy-path&quot;  title=&quot;点击复制文章链接&quot;&gt;&lt;i class=&quot;fa fa-clipboard&quot; data-clipboard-text=&quot;&#123;&#123; page.permalink &#125;&#125;&quot;  aria-label=&quot;复制成功！&quot;&gt;&lt;/i&gt;&lt;/span&gt;</span><br><span class="line">  &lt;/p&gt;</span><br><span class="line">  &lt;p&gt;&lt;span&gt;许可协议:&lt;/span&gt;&lt;i class=&quot;fa fa-creative-commons&quot;&gt;&lt;/i&gt; &lt;a rel=&quot;license&quot; href=&quot;https://creativecommons.org/licenses/by-nc-nd/4.0/&quot; target=&quot;_blank&quot; title=&quot;Attribution-NonCommercial-NoDerivatives 4.0 International (CC BY-NC-ND 4.0)&quot;&gt;署名-非商业性使用-禁止演绎 4.0 国际&lt;/a&gt; 转载请保留原文链接及作者。&lt;/p&gt;  </span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;script&gt; </span><br><span class="line">    var clipboard = new Clipboard(&apos;.fa-clipboard&apos;);</span><br><span class="line">    $(&quot;.fa-clipboard&quot;).click(function()&#123;</span><br><span class="line">      clipboard.on(&apos;success&apos;, function()&#123;</span><br><span class="line">        swal(&#123;   </span><br><span class="line">          title: &quot;&quot;,   </span><br><span class="line">          text: &apos;复制成功&apos;,</span><br><span class="line">          icon: &quot;success&quot;, </span><br><span class="line">          showConfirmButton: true</span><br><span class="line">          &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">    &#125;);  </span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure><p>在 <code>themes/next/source/css/_common/components/post/</code>新增样式文件<code>my-post-copyright.styl</code>, 添加内容</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">.my_post_copyright &#123;</span><br><span class="line">  width: 85%;</span><br><span class="line">  max-width: 45em;</span><br><span class="line">  margin: 2.8em auto 0;</span><br><span class="line">  padding: 0.5em 1.0em;</span><br><span class="line">  border: 1px solid #d3d3d3;</span><br><span class="line">  font-size: 0.93rem;</span><br><span class="line">  line-height: 1.6em;</span><br><span class="line">  word-break: break-all;</span><br><span class="line">  background: rgba(255,255,255,0.4);</span><br><span class="line">&#125;</span><br><span class="line">.my_post_copyright p&#123;margin:0;&#125;</span><br><span class="line">.my_post_copyright span &#123;</span><br><span class="line">  display: inline-block;</span><br><span class="line">  width: 5.2em;</span><br><span class="line">  color: #b5b5b5;</span><br><span class="line">  font-weight: bold;</span><br><span class="line">&#125;</span><br><span class="line">.my_post_copyright .raw &#123;</span><br><span class="line">  margin-left: 1em;</span><br><span class="line">  width: 5em;</span><br><span class="line">&#125;</span><br><span class="line">.my_post_copyright a &#123;</span><br><span class="line">  color: #808080;</span><br><span class="line">  border-bottom:0;</span><br><span class="line">&#125;</span><br><span class="line">.my_post_copyright a:hover &#123;</span><br><span class="line">  color: #a3d2a3;</span><br><span class="line">  text-decoration: underline;</span><br><span class="line">&#125;</span><br><span class="line">.my_post_copyright:hover .fa-clipboard &#123;</span><br><span class="line">  color: #000;</span><br><span class="line">&#125;</span><br><span class="line">.my_post_copyright .post-url:hover &#123;</span><br><span class="line">  font-weight: normal;</span><br><span class="line">&#125;</span><br><span class="line">.my_post_copyright .copy-path &#123;</span><br><span class="line">  margin-left: 1em;</span><br><span class="line">  width: 1em;</span><br><span class="line">  +mobile()&#123;display:none;&#125;</span><br><span class="line">&#125;</span><br><span class="line">.my_post_copyright .copy-path:hover &#123;</span><br><span class="line">  color: #808080;</span><br><span class="line">  cursor: pointer;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>修改 <code>themes/next/layout/_macro/post.swig</code></p><p>搜索  <code>END POST BODY</code>,如果有上一条的结束标记,就在结束标记内容后,添加,这里可以选择加在打赏之前还是之后</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--版权信息--&gt;</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">      &#123;% if not is_index %&#125;</span><br><span class="line">        &#123;% include &apos;my-copyright.swig&apos; %&#125;</span><br><span class="line">      &#123;% endif %&#125;</span><br><span class="line">    &lt;/div&gt;</span><br></pre></td></tr></table></figure><p>修改 <code>themes/next/source/css/_common/components/post/post.styl</code> 在最后一行引入样式表</p><p>@import “my-post-copyright”</p><p>修改默认样式 <code>hexo根目录/scaffolds/post.md</code> 以及 <code>hexo根目录/scaffolds/draft.md</code> </p><p>在title,tag同级添加内容如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">copyright: true</span><br></pre></td></tr></table></figure><p>这样每一篇默认都会有版权信息</p><h4 id="复制的时候带入版权信息"><a href="#复制的时候带入版权信息" class="headerlink" title="复制的时候带入版权信息"></a>复制的时候带入版权信息</h4><p>待处理</p><h3 id="分享功能"><a href="#分享功能" class="headerlink" title="分享功能"></a>分享功能</h3><p>使用<a href="https://www.addthis.com/" target="_blank" rel="noopener">addthis</a></p><p>注册完找到<code>Profile Options -&gt; General -&gt; ID</code></p><p>然后 到Tools -&gt; Add New Tool, 创建一个inline类型的样式</p><p>最后到<code>主题配置文件</code>,修改<code>add_this_id</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># Share  分享</span><br><span class="line">#jiathis: true</span><br><span class="line"># Warning: JiaThis does not support https. 实际支持https</span><br><span class="line">add_this_id: &#123;your AddThis ID&#125;</span><br></pre></td></tr></table></figure><p>背景动画</p><p>修改<code>主题配置</code>文件 ,需要什么动画,设置为true即可</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># Canvas-nest 连接线</span><br><span class="line">canvas_nest: false</span><br><span class="line"></span><br><span class="line"># three_waves 波浪线</span><br><span class="line">three_waves: false</span><br><span class="line"></span><br><span class="line"># canvas_lines 三维</span><br><span class="line">canvas_lines: true </span><br><span class="line"></span><br><span class="line"># canvas_sphere 三维球</span><br><span class="line">canvas_sphere: false</span><br></pre></td></tr></table></figure><h2 id="其他功能"><a href="#其他功能" class="headerlink" title="其他功能"></a>其他功能</h2><h3 id="实现小心心❤️"><a href="#实现小心心❤️" class="headerlink" title="实现小心心❤️"></a>实现小心心❤️</h3><p>实现点击出现小心心,但是有鼠标双击无法选择单词的问题</p><p>在/themes/next/source/js/src 新建<code>love.js</code></p><p>将<a href="https://link.jianshu.com/?t=http%3A%2F%2F7u2ss1.com1.z0.glb.clouddn.com%2Flove.js" target="_blank" rel="noopener">love.js</a>的内容拷贝到love.js中</p><p>找到 <code>\themes\next\layout\_layout.swig</code></p><p>在末尾添加</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type=&quot;text/javascript&quot; src=&quot;/js/src/love.js&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><h3 id="代码高亮样式"><a href="#代码高亮样式" class="headerlink" title="代码高亮样式"></a>代码高亮样式</h3><p>修改 <code>主题配置文件</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># Code Highlight theme</span><br><span class="line"># Available value:</span><br><span class="line">#    normal | night | night eighties | night blue | night bright</span><br><span class="line"># https://github.com/chriskempson/tomorrow-theme</span><br><span class="line"># 代码样式,normal 就是白底黑字, night 就是黑底</span><br><span class="line">highlight_theme: normal</span><br></pre></td></tr></table></figure><h3 id="小型代码块颜色"><a href="#小型代码块颜色" class="headerlink" title="小型代码块颜色"></a>小型代码块颜色</h3><p>修改 <code>\themes\next\source\css\_variables\base.styl</code> 中 <code>$code-background</code>和<code>$code-foreground</code>的值</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">// Code &amp; Code Blocks</span><br><span class="line">// --------------------------------------------------</span><br><span class="line">$code-font-family               = $font-family-monospace</span><br><span class="line">$code-font-size                 = 13px</span><br><span class="line">$code-font-size                 = unit(hexo-config(&apos;font.codes.size&apos;), px) if hexo-config(&apos;font.codes.size&apos;) is a &apos;unit&apos;</span><br><span class="line">$code-border-radius             = 3px</span><br><span class="line">$code-foreground                = $black-light</span><br><span class="line">$code-background                = $gainsboro</span><br></pre></td></tr></table></figure><h3 id="文章添加Github快捷"><a href="#文章添加Github快捷" class="headerlink" title="文章添加Github快捷"></a>文章添加Github快捷</h3><p>Github有两种样式: <a href="https://link.jianshu.com/?t=http%3A%2F%2Ftholman.com%2Fgithub-corners%2F" target="_blank" rel="noopener">三角</a>和<a href="https://link.jianshu.com/?t=https%3A%2F%2Fgithub.com%2Fblog%2F273-github-ribbons" target="_blank" rel="noopener">条形</a></p><p>选择喜欢的样式复制到 <code>themes/next/layout/_layout.swig</code>的 <code>&lt;div class=&quot;headband&quot;&gt;&lt;/div&gt;</code>下面,并且修改<code>href=&quot;&quot;</code>为你自己的Github地址</p><p>调整 width和height 修改宽高 即可</p><h3 id="文章加密"><a href="#文章加密" class="headerlink" title="文章加密"></a>文章加密</h3><p>在hexo根目录,输入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-encrypt --save</span><br></pre></td></tr></table></figure><p>配置 <code>站点配置文件</code> ,末尾添加</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># 默认密码</span><br><span class="line">encrypt: </span><br><span class="line">  password: 123456</span><br></pre></td></tr></table></figure><p>修改 <code>scaffolds/post.md</code></p><p>在<code>---</code> 之间添加</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">encrypt: false</span><br><span class="line">enc_pwd: 123456</span><br></pre></td></tr></table></figure><h3 id="使用数学公式"><a href="#使用数学公式" class="headerlink" title="使用数学公式"></a>使用数学公式</h3><p>主要是一些数学公式方便引入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># MathJax Support</span><br><span class="line">mathjax:</span><br><span class="line">  enable: true</span><br><span class="line">  per_page: false</span><br><span class="line">  cdn: //cdn.bootcss.com/mathjax/2.7.1/latest.js?config=TeX-AMS-MML_HTMLorMML</span><br></pre></td></tr></table></figure><p>学习资料 <a href="https://mathjax-chinese-doc.readthedocs.io/en/latest/start.html" target="_blank" rel="noopener">https://mathjax-chinese-doc.readthedocs.io/en/latest/start.html</a></p><hr><h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><p><a href="http://theme-next.iissnan.com/getting-started.html" target="_blank" rel="noopener">NexT 官方文档</a></p><p><a href="https://fontawesome.com/" target="_blank" rel="noopener">图标库</a></p><p><a href="https://www.jianshu.com/p/1f8107a8778c" target="_blank" rel="noopener">Alvabill的简书</a></p><p><a href="https://github.com/edolphin-ydf/hexo-encrypt" target="_blank" rel="noopener">关于加密</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="Hexo" scheme="http://yoursite.com/categories/Hexo/"/>
    
    
      <category term="Hexo" scheme="http://yoursite.com/tags/Hexo/"/>
    
      <category term="NexT" scheme="http://yoursite.com/tags/NexT/"/>
    
      <category term="主题" scheme="http://yoursite.com/tags/%E4%B8%BB%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title>Hexo 简单美化</title>
    <link href="http://yoursite.com/2018/09/12/Hexo%20%E7%BE%8E%E5%8C%96/"/>
    <id>http://yoursite.com/2018/09/12/Hexo 美化/</id>
    <published>2018-09-12T02:09:39.000Z</published>
    <updated>2018-09-30T08:26:25.960Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>前一篇中基本搭建好Hexo博客框架,也能访问,默认使用的主题是landscope ,主题可配置内容较少</p><a id="more"></a><h2 id="加个看板娘"><a href="#加个看板娘" class="headerlink" title="加个看板娘"></a>加个看板娘</h2><p>可以首先看看<a href="https://huaji8.top/post/live2d-plugin-2.0/" target="_blank" rel="noopener">效果图</a>, <a href="https://github.com/EYHN/hexo-helper-live2d/blob/master/README.zh-CN.md" target="_blank" rel="noopener">官方中文文档</a>具体已经介绍了如何使用,懒得看文档的至少看下效果图</p><h3 id="首先加载动画模块"><a href="#首先加载动画模块" class="headerlink" title="首先加载动画模块"></a>首先加载动画模块</h3><p><code>npm install --save hexo-helper-live2d</code></p><h3 id="添加代码"><a href="#添加代码" class="headerlink" title="添加代码"></a>添加代码</h3><p>在站点的<code>_config</code> 最后一行加入代码,注意缩进,不能有空格</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">live2d:</span><br><span class="line">  enable: true</span><br><span class="line">  scriptFrom: local</span><br><span class="line">  pluginRootPath: live2dw/</span><br><span class="line">  pluginJsPath: lib/</span><br><span class="line">  pluginModelPath: assets/</span><br><span class="line">  tagMode: false</span><br><span class="line">  debug: false</span><br><span class="line">  model:</span><br><span class="line">    use: live2d-widget-model-wanko</span><br><span class="line">  display:</span><br><span class="line">    position: right</span><br><span class="line">    width: 150</span><br><span class="line">    height: 300</span><br><span class="line">  mobile:</span><br><span class="line">    show: true</span><br></pre></td></tr></table></figure><h3 id="最重要的一步-安装模型"><a href="#最重要的一步-安装模型" class="headerlink" title="最重要的一步! 安装模型"></a>最重要的一步! 安装模型</h3><p>npm install 模型的包名</p><p>以上的代码如果要正确运行,需要安装wanko模型</p><p><code>npm install live2d-widget-model-wanko</code></p><h3 id="重新部署"><a href="#重新部署" class="headerlink" title="重新部署"></a>重新部署</h3><p><code>hexo g -d</code> </p><h3 id="更多的模型"><a href="#更多的模型" class="headerlink" title="更多的模型"></a>更多的模型</h3><p><a href="https://github.com/xiazeyu/live2d-widget-models" target="_blank" rel="noopener">官方文档</a>中有很多其他模型,可以对照模型自己看看</p><h2 id="首页内容缩略显示"><a href="#首页内容缩略显示" class="headerlink" title="首页内容缩略显示"></a>首页内容缩略显示</h2><p>首页的内容如果多几篇,会发现,首页内容好多,内容完全展示出来了</p><p>这里介绍markdown 的解决办法在在编写markdown时,在需要的地方加上 <code>&lt;!-- more --&gt;</code> 即可精确截断</p><p>后面切换nexT 主题,会用到自动截断</p><blockquote><p>这篇文章就是<code>主题可配置内容较少</code> 文本内容之后截断,可以查看效果</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;前一篇中基本搭建好Hexo博客框架,也能访问,默认使用的主题是landscope ,主题可配置内容较少&lt;/p&gt;
    
    </summary>
    
      <category term="Hexo" scheme="http://yoursite.com/categories/Hexo/"/>
    
    
      <category term="Hexo" scheme="http://yoursite.com/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>如何优雅的创建Hexo</title>
    <link href="http://yoursite.com/2018/09/10/%E5%A6%82%E4%BD%95%E4%BC%98%E9%9B%85%E7%9A%84%E5%88%9B%E5%BB%BAHexo/"/>
    <id>http://yoursite.com/2018/09/10/如何优雅的创建Hexo/</id>
    <published>2018-09-10T08:42:38.000Z</published>
    <updated>2018-09-29T06:31:13.300Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h2 id="什么是Hexo"><a href="#什么是Hexo" class="headerlink" title="什么是Hexo"></a>什么是Hexo</h2><p>官方的解释是:</p><p>Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。</p><h2 id="为什么使用Hexo"><a href="#为什么使用Hexo" class="headerlink" title="为什么使用Hexo"></a>为什么使用Hexo</h2><p>先看效果: <a href="https://williamlovealisa.cn/" target="_blank" rel="noopener">我的博客</a> 点击 人图标</p><blockquote><p>学习</p></blockquote><p>在搭建的过程中,能够明显感觉到Hexo组件化的架构,高度自由定制化的操作,可以在搭建的过程中学习</p><blockquote><p>简单</p></blockquote><p>对于程序员来说,复杂的问题简单化是一个基本技能,也是基本需求</p><blockquote><p>多平台,准入低</p></blockquote><p>可以自由的在Mac,Linux,Windows 搭建</p><p>托管平台可以选择github, Coding 等很多托管平台</p><blockquote><p>Markdown 友好型</p></blockquote><p>对于经常编写markdown的人来说,使用一个原生支持markdown的博客框架是一个很Cool的事.</p><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><ul><li>电脑一台 [必须]</li><li>注册一个代码托管平台(Github,Coding等) [必须]</li><li>最好拥有一个自己的域名 [可选]</li></ul><h2 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h2><h3 id="安装Git环境"><a href="#安装Git环境" class="headerlink" title="安装Git环境"></a>安装Git环境</h3><ul><li>Linux环境</li></ul><p>Ubuntu, Debian</p><p><code>$ sudo apt-get install git-core</code></p><p>Fedora, Red Hat, CentOS</p><p><code>$ sudo yum install git-core</code></p><ul><li>Mac环境</li></ul><p><code>$ brew install git</code></p><ul><li>Windows(谨慎)</li></ul><p><a href="https://git-scm.com/download/win" target="_blank" rel="noopener">下载安装,官方</a></p><p><a href="https://github.com/waylau/git-for-win" target="_blank" rel="noopener">下载并安装,百度云收录</a></p><h3 id="安装node环境"><a href="#安装node环境" class="headerlink" title="安装node环境"></a>安装node环境</h3><p>mac已经安装好node环境</p><p>Linux 和 Windows 遵循以下2步:</p><ul><li>第一步</li></ul><p><code>$ curl https://raw.github.com/creationix/nvm/master/install.sh | sh</code></p><p>或者</p><p><code>$ wget -qO- https://raw.github.com/creationix/nvm/master/install.sh | sh</code></p><ul><li>第二步</li></ul><p><code>$ nvm install stable</code></p><p>如果失败,访问<a href="http://nodejs.org/" target="_blank" rel="noopener">http://nodejs.org/</a>下载安装</p><blockquote><p>Tips:</p></blockquote><p>node一般使用RVM(Node Version Manager) 安装和升级</p><p>node的包管理使用的npm(node package Manager) 下载安装package的</p><h3 id="安装Hexo博客框架"><a href="#安装Hexo博客框架" class="headerlink" title="安装Hexo博客框架"></a>安装Hexo博客框架</h3><p><code>$ npm install hexo-cli -g</code></p><p>框架安装成功!</p><blockquote><p>Hexo需要放到哪里?目录名称叫什么?</p></blockquote><p>mac为例,我需要放到文稿下,创建Hexo目录</p><p><code>$ cd ~/Documents/ &amp;&amp; hexo init Hexo &amp;&amp; cd Hexo</code></p><blockquote><p>开始安装依赖</p></blockquote><p><code>$ npm install</code></p><blockquote><p>查看目录结构</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">├── _config.yml --&gt; 配置文件,整体配置</span><br><span class="line">├── package.json  --&gt; 依赖</span><br><span class="line">├── scaffolds   --&gt; 模板,默认3个,可以自己定义</span><br><span class="line">├── source  --&gt; 所有的资源文件</span><br><span class="line">|   ├── _drafts  --&gt; 根据drafts创建的草稿文件</span><br><span class="line">|   └── _posts  --&gt; 根据post模板创建的文件</span><br><span class="line">└── themes --&gt; 主题,重点修改,内部每个主题的_config.yml是具体配置</span><br></pre></td></tr></table></figure><h2 id="Hexo-的-Hello-World"><a href="#Hexo-的-Hello-World" class="headerlink" title="Hexo 的 Hello World"></a>Hexo 的 Hello World</h2><h3 id="简单配置"><a href="#简单配置" class="headerlink" title="简单配置"></a>简单配置</h3><p>Hexo配置文件: <code>_config.yml</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line"># Hexo Configuration</span><br><span class="line">## Docs: https://hexo.io/docs/configuration.html</span><br><span class="line">## Source: https://github.com/hexojs/hexo/</span><br><span class="line"></span><br><span class="line"># Site</span><br><span class="line">title: WilliamJi&apos;s Blog # 站点名称</span><br><span class="line">subtitle: Coder can change world! # 副标题,有些主题不展示...比如Next</span><br><span class="line">description: One minute on the stage needs ten years practice off stage! #自我介绍</span><br><span class="line">keywords: 个人博客 iOS # 关键词</span><br><span class="line">author: William Ji # 作者</span><br><span class="line">email: jxjmdx2009@163.com #你的联系邮箱</span><br><span class="line">language: zh_CN # 语言,支持的语言到主题 themes/landscope/language下找</span><br><span class="line">timezone: Asia/Shanghai # 时区,可不填</span><br><span class="line"></span><br><span class="line"># URL</span><br><span class="line">## If your site is put in a subdirectory, set url as &apos;http://yoursite.com/child&apos; and root as &apos;/child/&apos;</span><br><span class="line">url: http://yoursite.com # 先不修改</span><br><span class="line">root: /</span><br><span class="line">permalink: :year/:month/:day/:title/ # 文章永久的链接格式,可添加.html结尾</span><br><span class="line">permalink_defaults:</span><br><span class="line"></span><br><span class="line"># Directory</span><br><span class="line">source_dir: source</span><br><span class="line">public_dir: public</span><br><span class="line">tag_dir: tags</span><br><span class="line">archive_dir: archives</span><br><span class="line">category_dir: categories</span><br><span class="line">code_dir: downloads/code</span><br><span class="line">i18n_dir: :lang</span><br><span class="line">skip_render: # 跳过渲染的文件</span><br><span class="line">  - README.md</span><br><span class="line">  - CNAME</span><br><span class="line"></span><br><span class="line"># Writing</span><br><span class="line">new_post_name: :title.md # File name of new posts</span><br><span class="line">default_layout: post</span><br><span class="line">titlecase: false # Transform title into titlecase</span><br><span class="line">external_link: true # Open external links in new tab</span><br><span class="line">filename_case: 0</span><br><span class="line">render_drafts: false</span><br><span class="line">post_asset_folder: false</span><br><span class="line">relative_link: false</span><br><span class="line">future: true</span><br><span class="line">highlight:</span><br><span class="line">  enable: true</span><br><span class="line">  line_number: true</span><br><span class="line">  auto_detect: false</span><br><span class="line">  tab_replace:</span><br><span class="line">  </span><br><span class="line"># Home page setting</span><br><span class="line"># path: Root path for your blogs index page. (default = &apos;&apos;)</span><br><span class="line"># per_page: Posts displayed per page. (0 = disable pagination)</span><br><span class="line"># order_by: Posts order. (Order by date descending by default)</span><br><span class="line">index_generator:</span><br><span class="line">  path: &apos;&apos;</span><br><span class="line">  per_page: 10</span><br><span class="line">  order_by: -date</span><br><span class="line">  </span><br><span class="line"># Category &amp; Tag</span><br><span class="line">default_category: uncategorized</span><br><span class="line">category_map:</span><br><span class="line">tag_map:</span><br><span class="line"></span><br><span class="line"># Date / Time format</span><br><span class="line">## Hexo uses Moment.js to parse and display date</span><br><span class="line">## You can customize the date format as defined in</span><br><span class="line">## http://momentjs.com/docs/#/displaying/format/</span><br><span class="line"># 时间格式化类型</span><br><span class="line">date_format: YYYY-MM-DD</span><br><span class="line">time_format: HH:mm:ss</span><br><span class="line"></span><br><span class="line"># Pagination</span><br><span class="line">## Set per_page to 0 to disable pagination</span><br><span class="line">per_page: 10</span><br><span class="line">pagination_dir: page</span><br><span class="line"></span><br><span class="line"># Extensions 主题</span><br><span class="line">## Plugins: https://hexo.io/plugins/</span><br><span class="line">## Themes: https://hexo.io/themes/</span><br><span class="line">theme: landscape # 模式人landscape</span><br><span class="line"></span><br><span class="line"># Deployment</span><br><span class="line">## Docs: https://hexo.io/docs/deployment.html</span><br><span class="line">deploy:</span><br><span class="line">    type: git</span><br><span class="line">    repo:</span><br></pre></td></tr></table></figure><p><a href="https://hexo.io/zh-cn/docs/configuration" target="_blank" rel="noopener">查看更多设置</a></p><h3 id="查看效果"><a href="#查看效果" class="headerlink" title="查看效果"></a>查看效果</h3><p><code>$ hexo g &amp;&amp; hexo server -p 4000</code></p><blockquote><p>tips:</p></blockquote><blockquote><p>hexo g 是generate的意思,将.md文件根据配置文件生成预期的网页</p></blockquote><blockquote><p>hexo server 简写为hexo s也可以</p></blockquote><blockquote><p>-p 4000是指定端口,默认就是4000,可以直接 <code>hexo s</code></p></blockquote><h4 id="注意命令行里面的提示语"><a href="#注意命令行里面的提示语" class="headerlink" title="注意命令行里面的提示语:"></a>注意命令行里面的提示语:</h4><p><code>Hexo is running at http://localhost:4000 . Press Ctrl+C to stop.</code></p><p>解释: 如果是远程服务器, localhost必须是具体的远程IP, 注意一定要使用ctrl+C 停止服务器,要不然端口4000就被占用!</p><p>解决端口占用的办法有3个:</p><ul><li>重启终端</li><li>hexo server -p 换个端口</li><li>查看谁占用: lsof -i :4000 找到占用进程的PID填到后面的命令中 kill -9 PID 结束进程</li></ul><h3 id="可以不断修改配置-config-yml并且查看改动了"><a href="#可以不断修改配置-config-yml并且查看改动了" class="headerlink" title="可以不断修改配置_config.yml并且查看改动了"></a>可以不断修改配置<code>_config.yml</code>并且查看改动了</h3><p>启动服务器步骤:</p><ul><li>ctrl + c 关闭进程</li><li>hexo g &amp;&amp; hexo s</li></ul><blockquote><p>tips : 关于命令<br>A &amp;&amp; B意思是A成功的情况下执行B, A || B 是A失败的情况下执行B, A | B 是将A的输出当做B的输入,(A,B,C)是无论有没有切换上下文(目录),A,B,C都是在同一个上下文(目录)执行</p></blockquote><h2 id="Hexo-托管"><a href="#Hexo-托管" class="headerlink" title="Hexo 托管"></a>Hexo 托管</h2><p>托管就是不仅仅在本地运行,上传到免费的托管平台,其他人也可以访问到</p><p>如果拥有远程服务器, <code>hexo s</code> 可以直接访问 <code>ip:4000</code> 访问</p><p><a href="https://hexo.io/zh-cn/docs/deployment" target="_blank" rel="noopener">_config 部署介绍</a></p><h3 id="Hexo-托管到Github"><a href="#Hexo-托管到Github" class="headerlink" title="Hexo 托管到Github"></a>Hexo 托管到Github</h3><p>大部分人的选择,代码是开源的</p><h4 id="安装package"><a href="#安装package" class="headerlink" title="安装package"></a>安装package</h4><p><code>$ npm install hexo-deployer-git --save</code></p><h4 id="配置用户名和昵称"><a href="#配置用户名和昵称" class="headerlink" title="配置用户名和昵称"></a>配置用户名和昵称</h4><p>将Github的用户名和昵称配上</p><p><code>$ git config --global user.name &quot;Your user.name&quot;</code></p><p><code>$ git config --global user.email &quot;You user.email&quot;</code></p><h4 id="配置SSH-秘钥"><a href="#配置SSH-秘钥" class="headerlink" title="配置SSH 秘钥"></a>配置SSH 秘钥</h4><p>在Hexo运行的环境上输入命令</p><p><code>user.email</code> 输入Github的邮箱地址</p><p><code>ssh-keygen -t rsa -C user.email</code></p><p>保存的地址选择 <code>/root/.ssh/id_rsa</code> 然后回车</p><p>查看id_rsa.pub 的公钥信息</p><p>到<a href="https://github.com/settings/keys" target="_blank" rel="noopener">Github公钥</a>中 点击<code>new ssh key</code> 添加进去</p><h4 id="创建托管仓库"><a href="#创建托管仓库" class="headerlink" title="创建托管仓库"></a>创建托管仓库</h4><p>创建名称格式为(user.name).github.io的仓库,<br><code>user.name</code> 为Github的昵称</p><h4 id="修改Hexo配置"><a href="#修改Hexo配置" class="headerlink" title="修改Hexo配置"></a>修改Hexo配置</h4><p>在 <code>_config</code> 中最后修改</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">    type: git</span><br><span class="line">    repo: git@github.com:(name)/(name).github.io.git #括号里面换成自己的用户名和仓库名,去掉括号</span><br><span class="line">    branch: master</span><br></pre></td></tr></table></figure><h4 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h4><p>生成文件并且部署: <code>hexo g -d</code></p><p>然后访问 <code>userName.github.io</code>,比如我的 <a href="http://JXWilliamJi.github.io" target="_blank" rel="noopener">http://JXWilliamJi.github.io</a></p><h4 id="HTTPS"><a href="#HTTPS" class="headerlink" title="HTTPS"></a>HTTPS</h4><p>到Github的Setting中 勾选 <code>Enforce HTTPS</code></p><p>以后访问 <a href="https://JXWilliamJi.github.io" target="_blank" rel="noopener">https://JXWilliamJi.github.io</a></p><h3 id="托管到Coding-net"><a href="#托管到Coding-net" class="headerlink" title="托管到Coding.net"></a>托管到Coding.net</h3><p>Github免费账户不支持私有库,如果需要私有仓库必须付费,但是Coding.net免费用户支持私有库!</p><p>先去注册账号,<a href="https://coding.net/login" target="_blank" rel="noopener">https://coding.net/login</a></p><h4 id="创建仓库-名称随意"><a href="#创建仓库-名称随意" class="headerlink" title="创建仓库,名称随意"></a>创建仓库,名称随意</h4><p>比如创建一个名称为<code>william</code>的项目</p><h4 id="开启Pages服务"><a href="#开启Pages服务" class="headerlink" title="开启Pages服务"></a>开启Pages服务</h4><p>找到<code>代码-&gt;Pages</code> 然后 点击 <code>一键开启Pages</code></p><p>稍后看到如下信息</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">访问地址Fastlane.coding.me/william</span><br><span class="line">部署时间2017-07-12 17:00:40</span><br><span class="line">部署版本b488bfa7b3</span><br></pre></td></tr></table></figure><h4 id="修改Hexo配置-1"><a href="#修改Hexo配置-1" class="headerlink" title="修改Hexo配置"></a>修改Hexo配置</h4><p>在 <code>_config</code> 中最后修改</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: git@git.coding.net:Fastlane/william.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure><h4 id="这里有个问题"><a href="#这里有个问题" class="headerlink" title="这里有个问题"></a>这里有个问题</h4><p>如果直接<code>hexo g -d</code> 看到的是没有样式的网页</p><p>一般的解决办法是推荐你买个域名,但是不用这么麻烦</p><p>在站点目录下 找到root,将域名后的文本添加上去</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">url: http://yoursite.com</span><br><span class="line">root: /william # 修改这里</span><br><span class="line">permalink: :year/:month/:day/:title/</span><br><span class="line">permalink_defaults:</span><br></pre></td></tr></table></figure><h4 id="部署公钥"><a href="#部署公钥" class="headerlink" title="部署公钥"></a>部署公钥</h4><p>在项目的设置里面找到 <code>部署公钥</code></p><p>点击 <code>新建部署公钥</code></p><p>将 <code>id_rsa.pub</code> 的公钥信息复制进去</p><h4 id="重新部署"><a href="#重新部署" class="headerlink" title="重新部署"></a>重新部署</h4><p><code>hexo g -d</code>  <a href="https://Fastlane.coding.me/william" target="_blank" rel="noopener">https://Fastlane.coding.me/william</a> 就能访问啦!</p><h3 id="同时托管两个平台"><a href="#同时托管两个平台" class="headerlink" title="同时托管两个平台"></a>同时托管两个平台</h3><p>吃饱了撑的,但是可以做到</p><p>修改_config.xml</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">url: http://yoursite.com</span><br><span class="line">root: /william # 修改这里</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 修改这个</span><br><span class="line">deploy:</span><br><span class="line">- type: git</span><br><span class="line">  repo: git@github.com:(name)/(name).github.io.git #括号里面换成自己的用户名和仓库名,去掉括号</span><br><span class="line">  branch: master</span><br><span class="line">- type: git</span><br><span class="line">  repo: git@github.com:(name)/(name).github.io.git #括号里面换成自己的用户名和仓库名,去掉括号</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure><p>或者换个语法</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">type: git</span><br><span class="line">repo: github: git@github.com:(name)/(name).github.io.git,master</span><br><span class="line">  coding: git@github.com:(name)/(name).github.io.git,master</span><br></pre></td></tr></table></figure><h4 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h4><p>和单独配置相同</p><h4 id="访问"><a href="#访问" class="headerlink" title="访问"></a>访问</h4><p>直接访问 <code>(name).github.io/william</code></p><p>或者访问 <code>Fastlane.coding.me/william</code></p><h2 id="域名"><a href="#域名" class="headerlink" title="域名"></a>域名</h2><p>有了博客,最好买个域名,绑定域名更加高大上</p><h3 id="Github"><a href="#Github" class="headerlink" title="Github:"></a>Github:</h3><h4 id="去自己的域名下添加解析"><a href="#去自己的域名下添加解析" class="headerlink" title="去自己的域名下添加解析"></a>去自己的域名下添加解析</h4><p>记录类型为 CNAME 主机记录为 www/@ 线路选择默认，TTL 选择 600，记录值为 github 的仓库名 (name).github.io</p><p>主机记录可以选择www/@, www 访问的是<code>https://www.domain.com</code>  @ 访问的是 <code>https://domain.com</code></p><h4 id="配置Hexo"><a href="#配置Hexo" class="headerlink" title="配置Hexo"></a>配置Hexo</h4><p><code>cd hexo &amp;&amp; touch /source/CNAME</code></p><p>添加域名<code>zhangsan.com</code> 到 <code>CNAME</code> 中</p><p>重新部署 <code>hexo g -d</code></p><h3 id="Coding-net"><a href="#Coding-net" class="headerlink" title="Coding.net"></a>Coding.net</h3><p>方法和上面一样,选一个绑吧…没办法两个都绑</p><h3 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h3><p>现在我们的博客可以使用了… 但是默认的主题不好看!</p><p>虽然能用,但是我们需要更加漂亮的外观和炫酷的视觉效果!</p><p>后面介绍如何优化以及使用主题</p><h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><p>官方网站 <a href="https://hexo.io/zh-cn/" target="_blank" rel="noopener">https://hexo.io/zh-cn/</a></p><p>部署Coding <a href="https://www.cnblogs.com/tengj/p/5352572.html" target="_blank" rel="noopener">https://www.cnblogs.com/tengj/p/5352572.html</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="Hexo" scheme="http://yoursite.com/categories/Hexo/"/>
    
    
      <category term="Hexo" scheme="http://yoursite.com/tags/Hexo/"/>
    
  </entry>
  
</feed>
